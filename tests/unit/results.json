{
  "numTotalTestSuites": 183,
  "numPassedTestSuites": 182,
  "numFailedTestSuites": 1,
  "numPendingTestSuites": 0,
  "numTotalTests": 1576,
  "numPassedTests": 1493,
  "numFailedTests": 83,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "startTime": 1693908165130,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item has static class accordion-item",
          "status": "passed",
          "title": "has static class accordion-item",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item root is div",
          "status": "passed",
          "title": "root is div",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item contains b-collapse",
          "status": "passed",
          "title": "contains b-collapse",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item b-collapse contains static class accordion-collapse",
          "status": "passed",
          "title": "b-collapse contains static class accordion-collapse",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item b-collapse has child div",
          "status": "passed",
          "title": "b-collapse has child div",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item b-collapse child div contains static class accordion-body",
          "status": "passed",
          "title": "b-collapse child div contains static class accordion-body",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item b-collapse child div contains default slot",
          "status": "passed",
          "title": "b-collapse child div contains default slot",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item b-collapse has id attr has default id",
          "status": "passed",
          "title": "b-collapse has id attr has default id",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item b-collapse has id attr has prop id",
          "status": "passed",
          "title": "b-collapse has id attr has prop id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item b-collapse has prop visible",
          "status": "passed",
          "title": "b-collapse has prop visible",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item b-collapse has aria-labelledby with prop id",
          "status": "passed",
          "title": "b-collapse has aria-labelledby with prop id",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item headerTag is h2 by default",
          "status": "passed",
          "title": "headerTag is h2 by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item header tag is prop headerTag",
          "status": "passed",
          "title": "header tag is prop headerTag",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child has static class accordion-header",
          "status": "passed",
          "title": "h2 child has static class accordion-header",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child has id attr has default id",
          "status": "passed",
          "title": "h2 child has id attr has default id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child has id attr has prop id",
          "status": "passed",
          "title": "h2 child has id attr has prop id",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child has button child",
          "status": "passed",
          "title": "h2 child has button child",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child button child has static class accordion-button",
          "status": "passed",
          "title": "h2 child button child has static class accordion-button",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child button child has type attribute button",
          "status": "passed",
          "title": "h2 child button child has type attribute button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child button child has aria-expanded false by default",
          "status": "passed",
          "title": "h2 child button child has aria-expanded false by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child button child has aria-expanded true when visible true",
          "status": "passed",
          "title": "h2 child button child has aria-expanded true when visible true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child button child has aria-controls as id",
          "status": "passed",
          "title": "h2 child button child has aria-controls as id",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion-item"
          ],
          "fullName": " accordion-item h2 child button child class collapsed when visible false",
          "status": "failed",
          "title": "h2 child button child class collapsed when visible false",
          "duration": 13,
          "failureMessages": [
            "expected [ 'accordion-button', 'collapsed' ] to not include 'collapsed'"
          ],
          "location": {
            "line": 174,
            "column": 35
          }
        }
      ],
      "startTime": 1693908174415,
      "endTime": 1693908174547,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/accordion-item.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "accordion"
          ],
          "fullName": " accordion has static class accordion",
          "status": "passed",
          "title": "has static class accordion",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion"
          ],
          "fullName": " accordion has computed id by default",
          "status": "passed",
          "title": "has computed id by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion"
          ],
          "fullName": " accordion has id when prop id is set",
          "status": "passed",
          "title": "has id when prop id is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion"
          ],
          "fullName": " accordion has class accordion-flush when flush is true",
          "status": "passed",
          "title": "has class accordion-flush when flush is true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "accordion"
          ],
          "fullName": " accordion renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 11,
          "failureMessages": []
        }
      ],
      "startTime": 1693908192810,
      "endTime": 1693908192840,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/accordion.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert has BTransition",
          "status": "passed",
          "title": "has BTransition",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert gives prop fade to btransition of true by default",
          "status": "passed",
          "title": "gives prop fade to btransition of true by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert when prop fade is true, gives BTransition false",
          "status": "passed",
          "title": "when prop fade is true, gives BTransition false",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert BTransition is given static transProps object",
          "status": "passed",
          "title": "BTransition is given static transProps object",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert there is not a nested div by default",
          "status": "passed",
          "title": "there is not a nested div by default",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert there is a nested div when modelValue true",
          "status": "passed",
          "title": "there is a nested div when modelValue true",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert there is a nested div when modelValue number > 0",
          "status": "passed",
          "title": "there is a nested div when modelValue number > 0",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has static class alert",
          "status": "passed",
          "title": "nested div has static class alert",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has static attr role alert",
          "status": "passed",
          "title": "nested div has static attr role alert",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has static attr aria-live polite",
          "status": "passed",
          "title": "nested div has static attr aria-live polite",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has static attr aria-atomic true",
          "status": "passed",
          "title": "nested div has static attr aria-atomic true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has class alert-info by default",
          "status": "passed",
          "title": "nested div has class alert-info by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has class alert-{type} when prop variant",
          "status": "passed",
          "title": "nested div has class alert-{type} when prop variant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has class alert-dismissible when prop dismissible",
          "status": "passed",
          "title": "nested div has class alert-dismissible when prop dismissible",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div does not have class alert-dismissible when not prop dismissible",
          "status": "passed",
          "title": "nested div does not have class alert-dismissible when not prop dismissible",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div renders default slot",
          "status": "passed",
          "title": "nested div renders default slot",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has BCloseButton by default when prop dismissible",
          "status": "passed",
          "title": "nested div has BCloseButton by default when prop dismissible",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div does not have BCloseButton when not prop dismissible",
          "status": "passed",
          "title": "nested div does not have BCloseButton when not prop dismissible",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div does not have BCloseButton when prop dismissible but also slot close",
          "status": "passed",
          "title": "nested div does not have BCloseButton when prop dismissible but also slot close",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div does not have BCloseButton when prop dismissible but also prop closeContent",
          "status": "passed",
          "title": "nested div does not have BCloseButton when prop dismissible but also prop closeContent",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has BButton when prop dismissible but also prop closeContent",
          "status": "passed",
          "title": "nested div has BButton when prop dismissible but also prop closeContent",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div has BButton when prop dismissible but also slot close",
          "status": "passed",
          "title": "nested div has BButton when prop dismissible but also slot close",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div does not have BButton when prop dismissible and nothing else",
          "status": "passed",
          "title": "nested div does not have BButton when prop dismissible and nothing else",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton has static attr type to be button",
          "status": "passed",
          "title": "nested div BButton has static attr type to be button",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton renders prop closeContent",
          "status": "passed",
          "title": "nested div BButton renders prop closeContent",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton renders slot close",
          "status": "passed",
          "title": "nested div BButton renders slot close",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton renders slot over props",
          "status": "passed",
          "title": "nested div BButton renders slot over props",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BCloseButton has aria-label to be Close by default",
          "status": "passed",
          "title": "nested div BCloseButton has aria-label to be Close by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BCloseButton has aria-label to be prop dismissLabel",
          "status": "passed",
          "title": "nested div BCloseButton has aria-label to be prop dismissLabel",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BCloseButton emits update:modelValue when clicked when modelValue boolean",
          "status": "passed",
          "title": "nested div BCloseButton emits update:modelValue when clicked when modelValue boolean",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BCloseButton clicked update:modelValue emits arg false when modelValue boolean",
          "status": "passed",
          "title": "nested div BCloseButton clicked update:modelValue emits arg false when modelValue boolean",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BCloseButton emits update:modelValue when clicked when modelValue number > 0",
          "status": "passed",
          "title": "nested div BCloseButton emits update:modelValue when clicked when modelValue number > 0",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BCloseButton clicked update:modelValue emits arg 0 when modelValue number > 0",
          "status": "passed",
          "title": "nested div BCloseButton clicked update:modelValue emits arg 0 when modelValue number > 0",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BCloseButton clicked emits closed",
          "status": "passed",
          "title": "nested div BCloseButton clicked emits closed",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton emits update:modelValue when clicked when modelValue boolean",
          "status": "passed",
          "title": "nested div BButton emits update:modelValue when clicked when modelValue boolean",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton clicked update:modelValue emits arg false when modelValue boolean",
          "status": "passed",
          "title": "nested div BButton clicked update:modelValue emits arg false when modelValue boolean",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton emits update:modelValue when clicked when modelValue number > 0",
          "status": "passed",
          "title": "nested div BButton emits update:modelValue when clicked when modelValue number > 0",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton clicked update:modelValue emits arg 0 when modelValue number > 0",
          "status": "passed",
          "title": "nested div BButton clicked update:modelValue emits arg 0 when modelValue number > 0",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "alert"
          ],
          "fullName": " alert nested div BButton clicked emits closed",
          "status": "passed",
          "title": "nested div BButton clicked emits closed",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1693908180438,
      "endTime": 1693908180673,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/alert.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "avatar-group"
          ],
          "fullName": " avatar-group has static class b-avatar-group",
          "status": "passed",
          "title": "has static class b-avatar-group",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar-group"
          ],
          "fullName": " avatar-group has role group attribute",
          "status": "passed",
          "title": "has role group attribute",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar-group"
          ],
          "fullName": " avatar-group tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar-group"
          ],
          "fullName": " avatar-group tag changes with prop tag",
          "status": "passed",
          "title": "tag changes with prop tag",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar-group"
          ],
          "fullName": " avatar-group has second child div",
          "status": "passed",
          "title": "has second child div",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar-group"
          ],
          "fullName": " avatar-group div child has static class b-avatar-group-inner",
          "status": "passed",
          "title": "div child has static class b-avatar-group-inner",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar-group"
          ],
          "fullName": " avatar-group renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 14,
          "failureMessages": []
        }
      ],
      "startTime": 1693908191125,
      "endTime": 1693908191158,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/avatar-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "avatar"
          ],
          "fullName": " avatar has static b-avatar class",
          "status": "passed",
          "title": "has static b-avatar class",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar"
          ],
          "fullName": " avatar tag is button when prop button is true",
          "status": "passed",
          "title": "tag is button when prop button is true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar"
          ],
          "fullName": " avatar has attr type when prop button to be default button",
          "status": "passed",
          "title": "has attr type when prop button to be default button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar"
          ],
          "fullName": " avatar has attr type when prop button to be prop buttonType",
          "status": "passed",
          "title": "has attr type when prop button to be prop buttonType",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar"
          ],
          "fullName": " avatar does not have attr type when prop buttonType but not prop button",
          "status": "passed",
          "title": "does not have attr type when prop buttonType but not prop button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "avatar"
          ],
          "fullName": " avatar tag is default span",
          "status": "passed",
          "title": "tag is default span",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908194824,
      "endTime": 1693908194853,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/avatar.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge has static class badge",
          "status": "passed",
          "title": "has static class badge",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge tag is span by default",
          "status": "passed",
          "title": "tag is span by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains BLink if to prop",
          "status": "passed",
          "title": "contains BLink if to prop",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains BLink if href prop",
          "status": "passed",
          "title": "contains BLink if href prop",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge does not contain BLink by default",
          "status": "passed",
          "title": "does not contain BLink by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge is still blink even if prop tag exists, but is also link",
          "status": "passed",
          "title": "is still blink even if prop tag exists, but is also link",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge is prop tag when is not link",
          "status": "passed",
          "title": "is prop tag when is not link",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains class bg-{type} when prop varaint",
          "status": "passed",
          "title": "contains class bg-{type} when prop varaint",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains class active when prop active",
          "status": "passed",
          "title": "contains class active when prop active",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains class disabled when prop disabled",
          "status": "passed",
          "title": "contains class disabled when prop disabled",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains class text-dark when prop variant is warning|info|light",
          "status": "passed",
          "title": "contains class text-dark when prop variant is warning|info|light",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains class rounded-pill when prop pill",
          "status": "passed",
          "title": "contains class rounded-pill when prop pill",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains class text-decoration-none when prop to",
          "status": "passed",
          "title": "contains class text-decoration-none when prop to",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains class text-decoration-none when prop href",
          "status": "passed",
          "title": "contains class text-decoration-none when prop href",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains p-2 border border-light rounded-circle when prop dotIndicator",
          "status": "passed",
          "title": "contains p-2 border border-light rounded-circle when prop dotIndicator",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains position-absolute top-0 start-100 translate-middle when prop dotIndicator",
          "status": "passed",
          "title": "contains position-absolute top-0 start-100 translate-middle when prop dotIndicator",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "badge"
          ],
          "fullName": " badge contains position-absolute top-0 start-100 translate-middle when prop textIndicator",
          "status": "passed",
          "title": "contains position-absolute top-0 start-100 translate-middle when prop textIndicator",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908183262,
      "endTime": 1693908183344,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/badge.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item has static class breadcrumb-item",
          "status": "passed",
          "title": "has static class breadcrumb-item",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item has class active when prop active",
          "status": "passed",
          "title": "has class active when prop active",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item contains a span child when prop active",
          "status": "passed",
          "title": "contains a span child when prop active",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item contains a blink child by default",
          "status": "passed",
          "title": "contains a blink child by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item child contains attr aria-current when prop active",
          "status": "passed",
          "title": "child contains attr aria-current when prop active",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item emits click event",
          "status": "passed",
          "title": "emits click event",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item does not emit click event when prop disabled and blink clicked",
          "status": "passed",
          "title": "does not emit click event when prop disabled and blink clicked",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item does not emit click event when prop active and span clicked",
          "status": "passed",
          "title": "does not emit click event when prop active and span clicked",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item emits a MouseEvent when clicked",
          "status": "passed",
          "title": "emits a MouseEvent when clicked",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item renders default slot in child when child is span",
          "status": "passed",
          "title": "renders default slot in child when child is span",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item renders prop text in child when child is span",
          "status": "passed",
          "title": "renders prop text in child when child is span",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item renders prop text in child when child is span",
          "status": "passed",
          "title": "renders prop text in child when child is span",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item does not give prop active to child",
          "status": "failed",
          "title": "does not give prop active to child",
          "duration": 8,
          "failureMessages": [
            "expected 'true' to be undefined"
          ],
          "location": {
            "line": 112,
            "column": 40
          }
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item does not give prop ariaCurrent to child",
          "status": "passed",
          "title": "does not give prop ariaCurrent to child",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item does not give prop disabled to child",
          "status": "failed",
          "title": "does not give prop disabled to child",
          "duration": 2,
          "failureMessages": [
            "expected 'true' to be undefined"
          ],
          "location": {
            "line": 128,
            "column": 42
          }
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item does not give prop text to child",
          "status": "passed",
          "title": "does not give prop text to child",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item gives prop active to child when blink",
          "status": "failed",
          "title": "gives prop active to child when blink",
          "duration": 4,
          "failureMessages": [
            "expected undefined to be false // Object.is equality"
          ],
          "location": {
            "line": 144,
            "column": 36
          }
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item does not give prop ariaCurrent to child when blink",
          "status": "passed",
          "title": "does not give prop ariaCurrent to child when blink",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item gives prop disabled to child when blink",
          "status": "failed",
          "title": "gives prop disabled to child when blink",
          "duration": 4,
          "failureMessages": [
            "expected false to be true // Object.is equality"
          ],
          "location": {
            "line": 160,
            "column": 38
          }
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item does not give prop text to child when blink",
          "status": "passed",
          "title": "does not give prop text to child when blink",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb-item"
          ],
          "fullName": " breadcrumb-item gives prop activeClass to blink",
          "status": "failed",
          "title": "gives prop activeClass to blink",
          "duration": 3,
          "failureMessages": [
            "expected 'router-link-active' to be 'foobar' // Object.is equality"
          ],
          "location": {
            "line": 176,
            "column": 41
          }
        }
      ],
      "startTime": 1693908171783,
      "endTime": 1693908171877,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/breadcrumb-item.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb contains aria-label breadcrumb",
          "status": "passed",
          "title": "contains aria-label breadcrumb",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb tag is nav",
          "status": "passed",
          "title": "tag is nav",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb child tag is ol",
          "status": "passed",
          "title": "child tag is ol",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb ol child has static class breadcrumb",
          "status": "passed",
          "title": "ol child has static class breadcrumb",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb renders prepend slot",
          "status": "passed",
          "title": "renders prepend slot",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb renders append slot",
          "status": "passed",
          "title": "renders append slot",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb renders all slots in correct order",
          "status": "passed",
          "title": "renders all slots in correct order",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb has breadcrumbitem",
          "status": "passed",
          "title": "has breadcrumbitem",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb renders bbreadcrumbitem before default slot and after prepend slot",
          "status": "passed",
          "title": "renders bbreadcrumbitem before default slot and after prepend slot",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb bbreadcrumbitem exists when items array item is object",
          "status": "passed",
          "title": "bbreadcrumbitem exists when items array item is object",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb bbreadcrumbitem contains items as props",
          "status": "passed",
          "title": "bbreadcrumbitem contains items as props",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb breadcrumbitem exists when items array item is string",
          "status": "passed",
          "title": "breadcrumbitem exists when items array item is string",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb breadcrumbitem has prop text to be string when prop items array item is string",
          "status": "passed",
          "title": "breadcrumbitem has prop text to be string when prop items array item is string",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb breadcrumbitem components have prop href to be # when their index is less than items length",
          "status": "passed",
          "title": "breadcrumbitem components have prop href to be # when their index is less than items length",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "breadcrumb"
          ],
          "fullName": " breadcrumb breadcrumbitem components dont have prop href to be # when their index is items length",
          "status": "passed",
          "title": "breadcrumbitem components dont have prop href to be # when their index is items length",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908182487,
      "endTime": 1693908182559,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/breadcrumb.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group has static attr role as group",
          "status": "passed",
          "title": "has static attr role as group",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group has attr aria-label as prop ariaLabel",
          "status": "passed",
          "title": "has attr aria-label as prop ariaLabel",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group has attr aria-label to be Group by default",
          "status": "passed",
          "title": "has attr aria-label to be Group by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group has class btn-group when not prop vertical",
          "status": "passed",
          "title": "has class btn-group when not prop vertical",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group does not have class btn-group when prop vertical",
          "status": "passed",
          "title": "does not have class btn-group when prop vertical",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group has class btn-group-{type} when prop size",
          "status": "passed",
          "title": "has class btn-group-{type} when prop size",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group does not have class btn-group-{type} when prop size is undefined",
          "status": "passed",
          "title": "does not have class btn-group-{type} when prop size is undefined",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group does not have class btn-group-vertical when not prop vertical",
          "status": "passed",
          "title": "does not have class btn-group-vertical when not prop vertical",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-group"
          ],
          "fullName": " button-group has class btn-group-vertical when prop vertical",
          "status": "passed",
          "title": "has class btn-group-vertical when prop vertical",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908187152,
      "endTime": 1693908187195,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/button-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "button-toolbar"
          ],
          "fullName": " button-toolbar tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-toolbar"
          ],
          "fullName": " button-toolbar renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-toolbar"
          ],
          "fullName": " button-toolbar has static class btn-toolbar",
          "status": "passed",
          "title": "has static class btn-toolbar",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-toolbar"
          ],
          "fullName": " button-toolbar has static attr role as toolbar",
          "status": "passed",
          "title": "has static attr role as toolbar",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-toolbar"
          ],
          "fullName": " button-toolbar has attr aria-role to be prop ariaRole",
          "status": "passed",
          "title": "has attr aria-role to be prop ariaRole",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button-toolbar"
          ],
          "fullName": " button-toolbar has class justify-content-between when prop justify",
          "status": "passed",
          "title": "has class justify-content-between when prop justify",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908192160,
      "endTime": 1693908192199,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/button-toolbar.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has static class btn",
          "status": "passed",
          "title": "has static class btn",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has tag button by default",
          "status": "passed",
          "title": "has tag button by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button is blink if prop to",
          "status": "passed",
          "title": "is blink if prop to",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button is tag a if prop href",
          "status": "passed",
          "title": "is tag a if prop href",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button is tag a if prop href",
          "status": "passed",
          "title": "is tag a if prop href",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button is blink if prop to and prop href",
          "status": "passed",
          "title": "is blink if prop to and prop href",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button is blink if prop to and prop href and prop tag",
          "status": "passed",
          "title": "is blink if prop to and prop href and prop tag",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button is tag a if prop href and prop tag",
          "status": "passed",
          "title": "is tag a if prop href and prop tag",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button is blink if prop to and prop tag",
          "status": "passed",
          "title": "is blink if prop to and prop tag",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has class btn-{type} when prop variant",
          "status": "passed",
          "title": "has class btn-{type} when prop variant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has class btn-{type} when prop size",
          "status": "passed",
          "title": "has class btn-{type} when prop size",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has class active when prop active",
          "status": "passed",
          "title": "has class active when prop active",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has class active when prop pressed",
          "status": "passed",
          "title": "has class active when prop pressed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has class rounded-pill when prop pill",
          "status": "passed",
          "title": "has class rounded-pill when prop pill",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has class rounded-0 when prop squared",
          "status": "passed",
          "title": "has class rounded-0 when prop squared",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has class disabled when prop disabled",
          "status": "passed",
          "title": "has class disabled when prop disabled",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has aria-disabled if prop href",
          "status": "failed",
          "title": "has aria-disabled if prop href",
          "duration": 9,
          "failureMessages": [
            "expected 'false' to be undefined"
          ],
          "location": {
            "line": 140,
            "column": 49
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has aria-disabled if prop to",
          "status": "passed",
          "title": "has aria-disabled if prop to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has aria-disabled if prop disabled and prop tag is button",
          "status": "passed",
          "title": "has aria-disabled if prop disabled and prop tag is button",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr aria-pressed when prop pressed",
          "status": "passed",
          "title": "has attr aria-pressed when prop pressed",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr autocomplete when prop pressed",
          "status": "passed",
          "title": "has attr autocomplete when prop pressed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr disabled when is button and prop disabled",
          "status": "passed",
          "title": "has attr disabled when is button and prop disabled",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button does not have attr disabled when prop disabled but has prop href",
          "status": "passed",
          "title": "does not have attr disabled when prop disabled but has prop href",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button does not have attr disabled when prop disabled but has prop to",
          "status": "passed",
          "title": "does not have attr disabled when prop disabled but has prop to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button does not have attr disabled when prop disabled but does not have tag button",
          "status": "passed",
          "title": "does not have attr disabled when prop disabled but does not have tag button",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr href when prop href",
          "status": "passed",
          "title": "has attr href when prop href",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr rel when prop rel and prop to",
          "status": "passed",
          "title": "has attr rel when prop rel and prop to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr rel when prop rel and prop href",
          "status": "passed",
          "title": "has attr rel when prop rel and prop href",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr rel when prop rel when not href or to",
          "status": "passed",
          "title": "has attr rel when prop rel when not href or to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr role as button when non standard tag",
          "status": "passed",
          "title": "has attr role as button when non standard tag",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr role as button when prop href",
          "status": "failed",
          "title": "has attr role as button when prop href",
          "duration": 4,
          "failureMessages": [
            "expected 'false' to be 'button' // Object.is equality"
          ],
          "location": {
            "line": 254,
            "column": 40
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr role as button when prop to",
          "status": "passed",
          "title": "has attr role as button when prop to",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr role as button by default",
          "status": "passed",
          "title": "has attr role as button by default",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has prop target when prop to",
          "status": "passed",
          "title": "has prop target when prop to",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has prop target when prop href",
          "status": "passed",
          "title": "has prop target when prop href",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has prop target when prop to and prop target",
          "status": "passed",
          "title": "has prop target when prop to and prop target",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has prop target when prop href and prop target",
          "status": "passed",
          "title": "has prop target when prop href and prop target",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button does not have attr target when not link",
          "status": "passed",
          "title": "does not have attr target when not link",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr type when when prop type",
          "status": "passed",
          "title": "has attr type when when prop type",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button does not have attr type prop type and prop tag",
          "status": "passed",
          "title": "does not have attr type prop type and prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button does not have attr type prop type and prop to",
          "status": "passed",
          "title": "does not have attr type prop type and prop to",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button does not have attr type prop type and prop href",
          "status": "passed",
          "title": "does not have attr type prop type and prop href",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr to when prop to",
          "status": "passed",
          "title": "has attr to when prop to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr to when prop href and prop to",
          "status": "passed",
          "title": "has attr to when prop href and prop to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr to when prop to and prop tag",
          "status": "passed",
          "title": "has attr to when prop to and prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr to when prop to and prop tag",
          "status": "passed",
          "title": "has attr to when prop to and prop tag",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has attr append when prop to and prop append",
          "status": "passed",
          "title": "has attr append when prop to and prop append",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has activeClass when prop activeClass and prop to",
          "status": "passed",
          "title": "has activeClass when prop activeClass and prop to",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has nested prop event when prop event and prop to",
          "status": "passed",
          "title": "has nested prop event when prop event and prop to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has nested prop routerComponentName when prop routerComponentName and prop to",
          "status": "passed",
          "title": "has nested prop routerComponentName when prop routerComponentName and prop to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has nested prop routerTag when prop routerTag and prop to",
          "status": "passed",
          "title": "has nested prop routerTag when prop routerTag and prop to",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button emits click when clicked",
          "status": "passed",
          "title": "emits click when clicked",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button click emit value is MouseEvent",
          "status": "passed",
          "title": "click emit value is MouseEvent",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button click does not emit event when disabled",
          "status": "passed",
          "title": "click does not emit event when disabled",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button emits update:pressed when prop pressed",
          "status": "passed",
          "title": "emits update:pressed when prop pressed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button emit update:pressed value is opposite of prop pressed",
          "status": "passed",
          "title": "emit update:pressed value is opposite of prop pressed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button does not emit update:pressed when prop pressed and prop disabled",
          "status": "passed",
          "title": "does not emit update:pressed when prop pressed and prop disabled",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button emits both click and update:pressed when prop pressed and clicked",
          "status": "passed",
          "title": "emits both click and update:pressed when prop pressed and clicked",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button contains div child when prop loading",
          "status": "failed",
          "title": "contains div child when prop loading",
          "duration": 4,
          "failureMessages": [
            "expected false to be true // Object.is equality"
          ],
          "location": {
            "line": 467,
            "column": 27
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button first div child has static class btn-loading",
          "status": "failed",
          "title": "first div child has static class btn-loading",
          "duration": 14,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\">Loading...<span class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\"><!--v-if--></span></button>"
          ],
          "location": {
            "line": 474,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button first div child has class mode-fill when prop loadingMode is fill",
          "status": "failed",
          "title": "first div child has class mode-fill when prop loadingMode is fill",
          "duration": 3,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\" loadingmode=\"fill\">Loading...<span class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\"><!--v-if--></span></button>"
          ],
          "location": {
            "line": 482,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button first div child has class mode-inline when prop loadingMode is inline",
          "status": "failed",
          "title": "first div child has class mode-inline when prop loadingMode is inline",
          "duration": 3,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\" loadingmode=\"inline\">Loading...<span class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\"><!--v-if--></span></button>"
          ],
          "location": {
            "line": 490,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button first div child has nested BSpinner by default",
          "status": "failed",
          "title": "first div child has nested BSpinner by default",
          "duration": 2,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\" loadingmode=\"inline\">Loading...<span class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\"><!--v-if--></span></button>"
          ],
          "location": {
            "line": 498,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button first div child nested BSpinner has static class btn-spinner",
          "status": "failed",
          "title": "first div child nested BSpinner has static class btn-spinner",
          "duration": 3,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\" loadingmode=\"inline\">Loading...<span class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\"><!--v-if--></span></button>"
          ],
          "location": {
            "line": 507,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button first div child nested BSpinner has prop small true when size is not lg",
          "status": "failed",
          "title": "first div child nested BSpinner has prop small true when size is not lg",
          "duration": 2,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\" loadingmode=\"inline\">Loading...<span class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\"><!--v-if--></span></button>"
          ],
          "location": {
            "line": 516,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button first div child does not have bspinner when slot loading",
          "status": "failed",
          "title": "first div child does not have bspinner when slot loading",
          "duration": 4,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\" loadingmode=\"inline\">loading...</button>"
          ],
          "location": {
            "line": 528,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button first div child renders slot loading",
          "status": "failed",
          "title": "first div child renders slot loading",
          "duration": 8,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\" loadingmode=\"inline\">loading...</button>"
          ],
          "location": {
            "line": 538,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button both child divs exist when prop loading",
          "status": "failed",
          "title": "both child divs exist when prop loading",
          "duration": 2,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'exists')"
          ],
          "location": {
            "line": 547,
            "column": 19
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button has a second child div when not prop loading",
          "status": "failed",
          "title": "has a second child div when not prop loading",
          "duration": 2,
          "failureMessages": [
            "expected false to be true // Object.is equality"
          ],
          "location": {
            "line": 554,
            "column": 27
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button second child div has static class btn-content",
          "status": "failed",
          "title": "second child div has static class btn-content",
          "duration": 2,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\"></button>"
          ],
          "location": {
            "line": 559,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button second child div does not have class btn-loading-fill when prop loading false",
          "status": "failed",
          "title": "second child div does not have class btn-loading-fill when prop loading false",
          "duration": 2,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\"></button>"
          ],
          "location": {
            "line": 565,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button second child div has class btn-loading-fill when prop loading and loadingMode is fill",
          "status": "failed",
          "title": "second child div has class btn-loading-fill when prop loading and loadingMode is fill",
          "duration": 2,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'classes')"
          ],
          "location": {
            "line": 574,
            "column": 17
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button second child div renders default slot",
          "status": "failed",
          "title": "second child div renders default slot",
          "duration": 3,
          "failureMessages": [
            "Unable to get div within: <button class=\"btn btn-md btn-secondary\" type=\"button\">foobar</button>"
          ],
          "location": {
            "line": 583,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "button"
          ],
          "fullName": " button renders both slots when prop loading in correct order",
          "status": "failed",
          "title": "renders both slots when prop loading in correct order",
          "duration": 2,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'text')"
          ],
          "location": {
            "line": 593,
            "column": 19
          }
        }
      ],
      "startTime": 1693908171842,
      "endTime": 1693908172054,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/button.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has static class card body",
          "status": "passed",
          "title": "has static class card body",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body tag is prop bodyTag",
          "status": "passed",
          "title": "tag is prop bodyTag",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has class text-{type} when prop bodyTextVariant",
          "status": "passed",
          "title": "has class text-{type} when prop bodyTextVariant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has class bg-{type} when prop bodyBgVariant",
          "status": "passed",
          "title": "has class bg-{type} when prop bodyBgVariant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body does not have BCardTitle by default",
          "status": "passed",
          "title": "does not have BCardTitle by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body does not have BCardSubtitle by default",
          "status": "passed",
          "title": "does not have BCardSubtitle by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has BCardTitle when prop title",
          "status": "passed",
          "title": "has BCardTitle when prop title",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has BCardSubtitle when prop subtitle",
          "status": "passed",
          "title": "has BCardSubtitle when prop subtitle",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has BCardTitle when slot title",
          "status": "passed",
          "title": "has BCardTitle when slot title",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has BCardSubtitle when slot subtitle",
          "status": "passed",
          "title": "has BCardSubtitle when slot subtitle",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body BCardTitle child has text slot title",
          "status": "passed",
          "title": "BCardTitle child has text slot title",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body BCardSubtitle child has text slot subtitle",
          "status": "passed",
          "title": "BCardSubtitle child has text slot subtitle",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body BCardTitle child has text prop title",
          "status": "passed",
          "title": "BCardTitle child has text prop title",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body BCardSubtitle child has text prop subtitle",
          "status": "passed",
          "title": "BCardSubtitle child has text prop subtitle",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body BCardTitle has internal prop tag as prop titleTag",
          "status": "passed",
          "title": "BCardTitle has internal prop tag as prop titleTag",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body BCardSubtitle child has internal prop tag as prop subtitle",
          "status": "passed",
          "title": "BCardSubtitle child has internal prop tag as prop subtitle",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body BCardSubtitle child has internal prop textVariant as prop subtitleTextVariant",
          "status": "passed",
          "title": "BCardSubtitle child has internal prop textVariant as prop subtitleTextVariant",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body renders default slot over prop text",
          "status": "passed",
          "title": "renders default slot over prop text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has text in order",
          "status": "passed",
          "title": "has text in order",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-body"
          ],
          "fullName": " card-body has class card-img-overlay when prop overlay",
          "status": "passed",
          "title": "has class card-img-overlay when prop overlay",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908182759,
      "endTime": 1693908182832,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-body.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header has static class card-footer",
          "status": "passed",
          "title": "has static class card-footer",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header has child of BCardHeadFoot",
          "status": "passed",
          "title": "has child of BCardHeadFoot",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop text to child",
          "status": "passed",
          "title": "gives prop text to child",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop bgVariant to child",
          "status": "passed",
          "title": "gives prop bgVariant to child",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop borderVariant to child",
          "status": "passed",
          "title": "gives prop borderVariant to child",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop html to child",
          "status": "passed",
          "title": "gives prop html to child",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop tag to child",
          "status": "passed",
          "title": "gives prop tag to child",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop textVariant to child",
          "status": "passed",
          "title": "gives prop textVariant to child",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 10,
          "failureMessages": []
        }
      ],
      "startTime": 1693908191481,
      "endTime": 1693908191524,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-footer.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-group"
          ],
          "fullName": " card-group is tag div by default",
          "status": "passed",
          "title": "is tag div by default",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-group"
          ],
          "fullName": " card-group tag prop tag",
          "status": "passed",
          "title": "tag prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-group"
          ],
          "fullName": " card-group renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-group"
          ],
          "fullName": " card-group has class card-deck when prop deck",
          "status": "passed",
          "title": "has class card-deck when prop deck",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-group"
          ],
          "fullName": " card-group has class card-columns when prop columns",
          "status": "passed",
          "title": "has class card-columns when prop columns",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-group"
          ],
          "fullName": " card-group has class card-group by default",
          "status": "passed",
          "title": "has class card-group by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-group"
          ],
          "fullName": " card-group class card-deck takes priority over card-columns",
          "status": "passed",
          "title": "class card-deck takes priority over card-columns",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-group"
          ],
          "fullName": " card-group class card-columns takes priority over card-group",
          "status": "passed",
          "title": "class card-columns takes priority over card-group",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908192688,
      "endTime": 1693908192727,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot has class text-{type} when prop textVariant",
          "status": "passed",
          "title": "has class text-{type} when prop textVariant",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot has class bg-{type} when prop bgVariant",
          "status": "passed",
          "title": "has class bg-{type} when prop bgVariant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot has class border-{type} when prop borderVariant",
          "status": "passed",
          "title": "has class border-{type} when prop borderVariant",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot has nested div that when prop html",
          "status": "passed",
          "title": "has nested div that when prop html",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot nested div renders html when prop html",
          "status": "passed",
          "title": "nested div renders html when prop html",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot renders default slot over prop text",
          "status": "passed",
          "title": "renders default slot over prop text",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-head-foot"
          ],
          "fullName": " card-head-foot renders html over default slot",
          "status": "passed",
          "title": "renders html over default slot",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908189345,
      "endTime": 1693908189403,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-head-foot.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header has static class card-header",
          "status": "passed",
          "title": "has static class card-header",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header has child of BCardHeadFoot",
          "status": "passed",
          "title": "has child of BCardHeadFoot",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop text to child",
          "status": "passed",
          "title": "gives prop text to child",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop bgVariant to child",
          "status": "passed",
          "title": "gives prop bgVariant to child",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop borderVariant to child",
          "status": "passed",
          "title": "gives prop borderVariant to child",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop html to child",
          "status": "passed",
          "title": "gives prop html to child",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop tag to child",
          "status": "passed",
          "title": "gives prop tag to child",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header gives prop textVariant to child",
          "status": "passed",
          "title": "gives prop textVariant to child",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-header"
          ],
          "fullName": " card-header renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 14,
          "failureMessages": []
        }
      ],
      "startTime": 1693908188847,
      "endTime": 1693908188891,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-header.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img has BImg",
          "status": "passed",
          "title": "has BImg",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img has class card-img by default",
          "status": "passed",
          "title": "has class card-img by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg has class card-img by default",
          "status": "passed",
          "title": "BImg has class card-img by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img has class card-img-top when prop top",
          "status": "passed",
          "title": "has class card-img-top when prop top",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img has class card-img-right when prop end",
          "status": "passed",
          "title": "has class card-img-right when prop end",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img has class card-img-bottom when prop bottom",
          "status": "passed",
          "title": "has class card-img-bottom when prop bottom",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img has class card-img-left when prop start",
          "status": "passed",
          "title": "has class card-img-left when prop start",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img class card-img-top takes priority over prop right",
          "status": "passed",
          "title": "class card-img-top takes priority over prop right",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img class card-img-top takes priority over prop end",
          "status": "passed",
          "title": "class card-img-top takes priority over prop end",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img class card-img-right when prop end takes priority over prop bottom",
          "status": "passed",
          "title": "class card-img-right when prop end takes priority over prop bottom",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img class card-img-bottom takes priority over prop left",
          "status": "passed",
          "title": "class card-img-bottom takes priority over prop left",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img class card-img-bottom takes priority over prop start",
          "status": "passed",
          "title": "class card-img-bottom takes priority over prop start",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is given prop height",
          "status": "passed",
          "title": "BImg is given prop height",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is given prop src",
          "status": "passed",
          "title": "BImg is given prop src",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is given prop lazy",
          "status": "passed",
          "title": "BImg is given prop lazy",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is given prop width",
          "status": "passed",
          "title": "BImg is given prop width",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is given prop blank",
          "status": "passed",
          "title": "BImg is given prop blank",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is given prop blankColor",
          "status": "passed",
          "title": "BImg is given prop blankColor",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is given prop sizes",
          "status": "passed",
          "title": "BImg is given prop sizes",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is given prop srcset",
          "status": "passed",
          "title": "BImg is given prop srcset",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is not given prop end",
          "status": "passed",
          "title": "BImg is not given prop end",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is not given prop start",
          "status": "passed",
          "title": "BImg is not given prop start",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is not given prop top",
          "status": "passed",
          "title": "BImg is not given prop top",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img BImg is not given prop bottom",
          "status": "passed",
          "title": "BImg is not given prop bottom",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img emits load event on load",
          "status": "passed",
          "title": "emits load event on load",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-img"
          ],
          "fullName": " card-img load event value is instanceof Event",
          "status": "passed",
          "title": "load event value is instanceof Event",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908181512,
      "endTime": 1693908181602,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-img.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-subtitle"
          ],
          "fullName": " card-subtitle tag is h4 by default",
          "status": "passed",
          "title": "tag is h4 by default",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-subtitle"
          ],
          "fullName": " card-subtitle has static class card-text",
          "status": "passed",
          "title": "has static class card-text",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-subtitle"
          ],
          "fullName": " card-subtitle has static class mb-2",
          "status": "passed",
          "title": "has static class mb-2",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-subtitle"
          ],
          "fullName": " card-subtitle tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-subtitle"
          ],
          "fullName": " card-subtitle renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-subtitle"
          ],
          "fullName": " card-subtitle renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-subtitle"
          ],
          "fullName": " card-subtitle renders default slot over prop text",
          "status": "passed",
          "title": "renders default slot over prop text",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-subtitle"
          ],
          "fullName": " card-subtitle has class text-{type} when prop textVariant",
          "status": "passed",
          "title": "has class text-{type} when prop textVariant",
          "duration": 6,
          "failureMessages": []
        }
      ],
      "startTime": 1693908189283,
      "endTime": 1693908189347,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-subtitle.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-text"
          ],
          "fullName": " card-text tag is p by default",
          "status": "passed",
          "title": "tag is p by default",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-text"
          ],
          "fullName": " card-text has static class card-text",
          "status": "passed",
          "title": "has static class card-text",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-text"
          ],
          "fullName": " card-text tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-text"
          ],
          "fullName": " card-text renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-text"
          ],
          "fullName": " card-text renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-text"
          ],
          "fullName": " card-text renders default slot over prop text",
          "status": "passed",
          "title": "renders default slot over prop text",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908193389,
      "endTime": 1693908193419,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-text.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card-title"
          ],
          "fullName": " card-title tag is h4 by default",
          "status": "passed",
          "title": "tag is h4 by default",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-title"
          ],
          "fullName": " card-title has static class card-title",
          "status": "passed",
          "title": "has static class card-title",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-title"
          ],
          "fullName": " card-title tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-title"
          ],
          "fullName": " card-title renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-title"
          ],
          "fullName": " card-title renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card-title"
          ],
          "fullName": " card-title renders default slot over prop text",
          "status": "passed",
          "title": "renders default slot over prop text",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908197356,
      "endTime": 1693908197392,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card-title.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has static class card",
          "status": "passed",
          "title": "has static class card",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has class text-{type} when prop align",
          "status": "passed",
          "title": "has class text-{type} when prop align",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has class text-{type} when prop textVariant",
          "status": "passed",
          "title": "has class text-{type} when prop textVariant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has class bg-{type} when prop bgVariant",
          "status": "passed",
          "title": "has class bg-{type} when prop bgVariant",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has class border-{type} when prop textVariant",
          "status": "passed",
          "title": "has class border-{type} when prop textVariant",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has class flex-row when prop imgStart",
          "status": "passed",
          "title": "has class flex-row when prop imgStart",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has class flex-row-reverse when prop imgEnd",
          "status": "passed",
          "title": "has class flex-row-reverse when prop imgEnd",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders img slot",
          "status": "passed",
          "title": "renders img slot",
          "duration": 18,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders img in correct order when not prop imgBottom",
          "status": "passed",
          "title": "renders img in correct order when not prop imgBottom",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card does not render b-card-img when slot img",
          "status": "passed",
          "title": "does not render b-card-img when slot img",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders img in correct order when prop imgBottom",
          "status": "passed",
          "title": "renders img in correct order when prop imgBottom",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card does not have child BCardImg by default",
          "status": "passed",
          "title": "does not have child BCardImg by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has child BCardImg when prop imgSrc",
          "status": "passed",
          "title": "has child BCardImg when prop imgSrc",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardImg has its prop src as imgSrc",
          "status": "passed",
          "title": "child BCardImg has its prop src as imgSrc",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardImg has its prop width as imgWidth string",
          "status": "passed",
          "title": "child BCardImg has its prop width as imgWidth string",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardImg has its prop height as imgHeight",
          "status": "passed",
          "title": "child BCardImg has its prop height as imgHeight",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardImg has its prop height as imgHeight string",
          "status": "passed",
          "title": "child BCardImg has its prop height as imgHeight string",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card does not have child BCardHeader by default",
          "status": "passed",
          "title": "does not have child BCardHeader by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has child BCardHeader when prop header",
          "status": "passed",
          "title": "has child BCardHeader when prop header",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has child BCardHeader when slot header",
          "status": "passed",
          "title": "has child BCardHeader when slot header",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has child BCardHeader when prop headerHtml",
          "status": "passed",
          "title": "has child BCardHeader when prop headerHtml",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader is given class of headerClass",
          "status": "passed",
          "title": "child BCardHeader is given class of headerClass",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop bgVariant as prop headerBgVariant",
          "status": "passed",
          "title": "child BCardHeader has internal prop bgVariant as prop headerBgVariant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop borderVariant as prop headerBorderVariant",
          "status": "passed",
          "title": "child BCardHeader has internal prop borderVariant as prop headerBorderVariant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop html as prop headerHtml",
          "status": "passed",
          "title": "child BCardHeader has internal prop html as prop headerHtml",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop tag as prop headerTag",
          "status": "passed",
          "title": "child BCardHeader has internal prop tag as prop headerTag",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop textVariant as prop headerTextVariant",
          "status": "passed",
          "title": "child BCardHeader has internal prop textVariant as prop headerTextVariant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader text is prop header",
          "status": "passed",
          "title": "child BCardHeader text is prop header",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader text is slot header",
          "status": "passed",
          "title": "child BCardHeader text is slot header",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader text prefers slot header over prop header",
          "status": "passed",
          "title": "child BCardHeader text prefers slot header over prop header",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has child BCardBody by default",
          "status": "passed",
          "title": "has child BCardBody by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card does not have child BCardBody when prop noBdoy",
          "status": "passed",
          "title": "does not have child BCardBody when prop noBdoy",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardBody text is prop bodyText",
          "status": "passed",
          "title": "child BCardBody text is prop bodyText",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardBody text is slot default",
          "status": "passed",
          "title": "child BCardBody text is slot default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardBody text prefers slot default over prop bodyText",
          "status": "passed",
          "title": "child BCardBody text prefers slot default over prop bodyText",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders default slot when prop noBody",
          "status": "passed",
          "title": "renders default slot when prop noBody",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders prop bodyText when prop noBody",
          "status": "passed",
          "title": "renders prop bodyText when prop noBody",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders default slot over prop bodyText when prop noBody",
          "status": "passed",
          "title": "renders default slot over prop bodyText when prop noBody",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardBody is given prop bodyClass",
          "status": "passed",
          "title": "child BCardBody is given prop bodyClass",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop overlay as prop overlay",
          "status": "passed",
          "title": "child BCardHeader has internal prop overlay as prop overlay",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop bodyBgVariant as prop bodyBgVariant",
          "status": "passed",
          "title": "child BCardHeader has internal prop bodyBgVariant as prop bodyBgVariant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop bodyTag as prop bodyTag",
          "status": "passed",
          "title": "child BCardHeader has internal prop bodyTag as prop bodyTag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop bodyTextVariant as prop bodyTextVariant",
          "status": "passed",
          "title": "child BCardHeader has internal prop bodyTextVariant as prop bodyTextVariant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop subtitle as prop subtitle",
          "status": "passed",
          "title": "child BCardHeader has internal prop subtitle as prop subtitle",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop subtitleTag as prop subtitleTag",
          "status": "passed",
          "title": "child BCardHeader has internal prop subtitleTag as prop subtitleTag",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop subtitleTextVariant as prop subtitleTextVariant",
          "status": "passed",
          "title": "child BCardHeader has internal prop subtitleTextVariant as prop subtitleTextVariant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop title as prop title",
          "status": "passed",
          "title": "child BCardHeader has internal prop title as prop title",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardHeader has internal prop titleTag as prop titleTag",
          "status": "passed",
          "title": "child BCardHeader has internal prop titleTag as prop titleTag",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card does not have child BCardFooter by default",
          "status": "passed",
          "title": "does not have child BCardFooter by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has child BCardFooter when prop footer",
          "status": "passed",
          "title": "has child BCardFooter when prop footer",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has child BCardFooter when slot footer",
          "status": "passed",
          "title": "has child BCardFooter when slot footer",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card has child BCardFooter when prop footerHtml",
          "status": "passed",
          "title": "has child BCardFooter when prop footerHtml",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter contains class prop footerClass",
          "status": "passed",
          "title": "child BCardFooter contains class prop footerClass",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter has internal prop bgVariant as prop footerBgVariant",
          "status": "passed",
          "title": "child BCardFooter has internal prop bgVariant as prop footerBgVariant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter has internal prop borderVariant as prop footerBorderVariant",
          "status": "passed",
          "title": "child BCardFooter has internal prop borderVariant as prop footerBorderVariant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter has internal prop html as prop footerHtml",
          "status": "passed",
          "title": "child BCardFooter has internal prop html as prop footerHtml",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter has internal prop tag as prop footerTag",
          "status": "passed",
          "title": "child BCardFooter has internal prop tag as prop footerTag",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter has internal prop textVariant as prop footerTextVariant",
          "status": "passed",
          "title": "child BCardFooter has internal prop textVariant as prop footerTextVariant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter has renders text as slot footer",
          "status": "passed",
          "title": "child BCardFooter has renders text as slot footer",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter has renders text as prop footer",
          "status": "passed",
          "title": "child BCardFooter has renders text as prop footer",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card child BCardFooter prefers to render slot footer over prop footer",
          "status": "passed",
          "title": "child BCardFooter prefers to render slot footer over prop footer",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders in correct order",
          "status": "passed",
          "title": "renders in correct order",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders img in correct order",
          "status": "passed",
          "title": "renders img in correct order",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "card"
          ],
          "fullName": " card renders img in correct order when imgBottom",
          "status": "passed",
          "title": "renders img in correct order when imgBottom",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1693908179305,
      "endTime": 1693908179590,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/card.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel has static class carousel",
          "status": "passed",
          "title": "has static class carousel",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel has static class slide",
          "status": "passed",
          "title": "has static class slide",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel has attr id",
          "status": "passed",
          "title": "has attr id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel has attr id when prop id",
          "status": "passed",
          "title": "has attr id when prop id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel has div with class carousel-inner",
          "status": "passed",
          "title": "has div with class carousel-inner",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel element that has class carousel-inner is div",
          "status": "passed",
          "title": "element that has class carousel-inner is div",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel does not have element with class carousel-indicators by default",
          "status": "passed",
          "title": "does not have element with class carousel-indicators by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel has element with class carousel-indicators if prop indicator",
          "status": "passed",
          "title": "has element with class carousel-indicators if prop indicator",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel element with class carousel-indicators tag is div",
          "status": "passed",
          "title": "element with class carousel-indicators tag is div",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel div with carousel-indicators class has no button child by default",
          "status": "passed",
          "title": "div with carousel-indicators class has no button child by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel div with carousel-indicators class has no button child by default",
          "status": "failed",
          "title": "div with carousel-indicators class has no button child by default",
          "duration": 17,
          "failureMessages": [
            "expected false to be true // Object.is equality"
          ],
          "location": {
            "line": 85,
            "column": 30
          }
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel does not have element with class carousel-control-prev by default",
          "status": "passed",
          "title": "does not have element with class carousel-control-prev by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel has element with class carousel-control-prev when prop controls",
          "status": "passed",
          "title": "has element with class carousel-control-prev when prop controls",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel element with class carousel-control-prev is tag button",
          "status": "passed",
          "title": "element with class carousel-control-prev is tag button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button with class carousel-control-prev has static attr as button",
          "status": "passed",
          "title": "button with class carousel-control-prev has static attr as button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button with class carousel-control-prev has child element with class carousel-control-prev-icon",
          "status": "passed",
          "title": "button with class carousel-control-prev has child element with class carousel-control-prev-icon",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel element with class carousel-control-prev-icon is tag span",
          "status": "passed",
          "title": "element with class carousel-control-prev-icon is tag span",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel element with class carousel-control-prev-icon has static attr aria-hidden to be true",
          "status": "passed",
          "title": "element with class carousel-control-prev-icon has static attr aria-hidden to be true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button with class carousel-control-prev has child element with class visually-hidden",
          "status": "passed",
          "title": "button with class carousel-control-prev has child element with class visually-hidden",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button whos class is carousel-control-prev child element with class visually-hidden has is tag span",
          "status": "passed",
          "title": "button whos class is carousel-control-prev child element with class visually-hidden has is tag span",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button whos class is carousel-control-prev child element with class visually-hidden has text is prop controlsPrevText",
          "status": "passed",
          "title": "button whos class is carousel-control-prev child element with class visually-hidden has text is prop controlsPrevText",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button whos class is carousel-control-prev child element with class visually-hidden has text previous by default",
          "status": "passed",
          "title": "button whos class is carousel-control-prev child element with class visually-hidden has text previous by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel does not have element with class carousel-control-next by default",
          "status": "passed",
          "title": "does not have element with class carousel-control-next by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel has element with class carousel-control-next when prop controls",
          "status": "passed",
          "title": "has element with class carousel-control-next when prop controls",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel element with class carousel-control-next is tag button",
          "status": "passed",
          "title": "element with class carousel-control-next is tag button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button with class carousel-control-next has static attr as button",
          "status": "passed",
          "title": "button with class carousel-control-next has static attr as button",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button with class carousel-control-next has child element with class carousel-control-next-icon",
          "status": "passed",
          "title": "button with class carousel-control-next has child element with class carousel-control-next-icon",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button whos class is carousel-control-next child element with class carousel-control-next-icon is tag span",
          "status": "passed",
          "title": "button whos class is carousel-control-next child element with class carousel-control-next-icon is tag span",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel element with class carousel-control-next-icon has static attr aria-hidden to be true",
          "status": "passed",
          "title": "element with class carousel-control-next-icon has static attr aria-hidden to be true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button with class carousel-control-next has child element with class visually-hidden",
          "status": "passed",
          "title": "button with class carousel-control-next has child element with class visually-hidden",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button whos class is carousel-control-next has child element with class visually-hidden is tag span",
          "status": "passed",
          "title": "button whos class is carousel-control-next has child element with class visually-hidden is tag span",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel button whos class is carousel-control-next child element with class visually-hidden has text is prop controlsNextText",
          "status": "passed",
          "title": "button whos class is carousel-control-next child element with class visually-hidden has text is prop controlsNextText",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "carousel"
          ],
          "fullName": " carousel buttons whos class is carousel-control-next child element with class visually-hidden has text previous by default",
          "status": "passed",
          "title": "buttons whos class is carousel-control-next child element with class visually-hidden has text previous by default",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908171831,
      "endTime": 1693908171959,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/carousel.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "close-button"
          ],
          "fullName": " close-button has static class btn-close",
          "status": "passed",
          "title": "has static class btn-close",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "close-button"
          ],
          "fullName": " close-button has attr type to be button by default",
          "status": "passed",
          "title": "has attr type to be button by default",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "close-button"
          ],
          "fullName": " close-button has attr type to be prop type",
          "status": "passed",
          "title": "has attr type to be prop type",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "close-button"
          ],
          "fullName": " close-button has attr aria-label when prop ariaLabel",
          "status": "passed",
          "title": "has attr aria-label when prop ariaLabel",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "close-button"
          ],
          "fullName": " close-button has attr disabled when prop disabled",
          "status": "passed",
          "title": "has attr disabled when prop disabled",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "close-button"
          ],
          "fullName": " close-button is tag button",
          "status": "passed",
          "title": "is tag button",
          "duration": 1,
          "failureMessages": []
        }
      ],
      "startTime": 1693908199899,
      "endTime": 1693908199915,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/close-button.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col tag is default div",
          "status": "passed",
          "title": "tag is default div",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col has class col-{type} when prop cols",
          "status": "passed",
          "title": "has class col-{type} when prop cols",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col has class offset-{type} when prop offset",
          "status": "passed",
          "title": "has class offset-{type} when prop offset",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col has class order-{type} when prop order",
          "status": "passed",
          "title": "has class order-{type} when prop order",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col has class align-self-{type} when prop order",
          "status": "passed",
          "title": "has class align-self-{type} when prop order",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col has class col when prop col",
          "status": "passed",
          "title": "has class col when prop col",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col does not have class col when prop col false and prop cols Truthy",
          "status": "passed",
          "title": "does not have class col when prop col false and prop cols Truthy",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "col"
          ],
          "fullName": " col renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 9,
          "failureMessages": []
        }
      ],
      "startTime": 1693908188508,
      "endTime": 1693908188556,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/col.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "collapse"
          ],
          "fullName": " collapse has static class collapse",
          "status": "passed",
          "title": "has static class collapse",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "collapse"
          ],
          "fullName": " collapse has default tag div",
          "status": "passed",
          "title": "has default tag div",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "collapse"
          ],
          "fullName": " collapse is tag when prop tag",
          "status": "passed",
          "title": "is tag when prop tag",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "collapse"
          ],
          "fullName": " collapse has default id",
          "status": "passed",
          "title": "has default id",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "collapse"
          ],
          "fullName": " collapse has id as prop id",
          "status": "passed",
          "title": "has id as prop id",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "collapse"
          ],
          "fullName": " collapse has attribute is-nav when prop is nav",
          "status": "passed",
          "title": "has attribute is-nav when prop is nav",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "collapse"
          ],
          "fullName": " collapse renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "collapse"
          ],
          "fullName": " collapse renders all slot",
          "status": "passed",
          "title": "renders all slot",
          "duration": 6,
          "failureMessages": []
        }
      ],
      "startTime": 1693908187040,
      "endTime": 1693908187089,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/collapse.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "container"
          ],
          "fullName": " container tag is default div",
          "status": "passed",
          "title": "tag is default div",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "container"
          ],
          "fullName": " container tag is prop tag",
          "status": "failed",
          "title": "tag is prop tag",
          "duration": 16,
          "failureMessages": [
            "expected 'DIV' to be 'SMALL' // Object.is equality"
          ],
          "location": {
            "line": 19,
            "column": 37
          }
        },
        {
          "ancestorTitles": [
            "",
            "container"
          ],
          "fullName": " container renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "container"
          ],
          "fullName": " container has class container when prop fluid is false",
          "status": "passed",
          "title": "has class container when prop fluid is false",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "container"
          ],
          "fullName": " container has class container-fluid when prop fluid is true",
          "status": "passed",
          "title": "has class container-fluid when prop fluid is true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "container"
          ],
          "fullName": " container has class container-{type} when prop fluid is string",
          "status": "passed",
          "title": "has class container-{type} when prop fluid is string",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "container"
          ],
          "fullName": " container has class gx-{type} when prop gutterX",
          "status": "passed",
          "title": "has class gx-{type} when prop gutterX",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "container"
          ],
          "fullName": " container has class gy-{type} when prop gutterY",
          "status": "passed",
          "title": "has class gy-{type} when prop gutterY",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908176449,
      "endTime": 1693908176509,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/container.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "dropdown-divider"
          ],
          "fullName": " dropdown-divider is tag li",
          "status": "passed",
          "title": "is tag li",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-divider"
          ],
          "fullName": " dropdown-divider has static attr role to be presentation",
          "status": "passed",
          "title": "has static attr role to be presentation",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-divider"
          ],
          "fullName": " dropdown-divider has child hr when not prop hr",
          "status": "passed",
          "title": "has child hr when not prop hr",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-divider"
          ],
          "fullName": " dropdown-divider has child hr is prop tag",
          "status": "passed",
          "title": "has child hr is prop tag",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-divider"
          ],
          "fullName": " dropdown-divider child hr has static class dropdown-divider",
          "status": "passed",
          "title": "child hr has static class dropdown-divider",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-divider"
          ],
          "fullName": " dropdown-divider child hr has static attr role to be separator",
          "status": "passed",
          "title": "child hr has static attr role to be separator",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-divider"
          ],
          "fullName": " dropdown-divider child hr has static attr aria-orientation to be horizontal",
          "status": "passed",
          "title": "child hr has static attr aria-orientation to be horizontal",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908200957,
      "endTime": 1693908200975,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/dropdown-divider.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "dropdown-form"
          ],
          "fullName": " dropdown-form tag is li",
          "status": "passed",
          "title": "tag is li",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-form"
          ],
          "fullName": " dropdown-form has static role to be presentation",
          "status": "passed",
          "title": "has static role to be presentation",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-form"
          ],
          "fullName": " dropdown-form has child form",
          "status": "passed",
          "title": "has child form",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-form"
          ],
          "fullName": " dropdown-form child form has static class px-4",
          "status": "passed",
          "title": "child form has static class px-4",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-form"
          ],
          "fullName": " dropdown-form child form has static class py-3",
          "status": "passed",
          "title": "child form has static class py-3",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-form"
          ],
          "fullName": " dropdown-form child form renders default slot",
          "status": "passed",
          "title": "child form renders default slot",
          "duration": 14,
          "failureMessages": []
        }
      ],
      "startTime": 1693908195492,
      "endTime": 1693908195529,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/dropdown-form.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group is tag li",
          "status": "passed",
          "title": "is tag li",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group has static attr role to be presentation",
          "status": "passed",
          "title": "has static attr role to be presentation",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group has ul child",
          "status": "passed",
          "title": "has ul child",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group ul child has static attr role to be group",
          "status": "passed",
          "title": "ul child has static attr role to be group",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group ul child has static class list-unstyled",
          "status": "passed",
          "title": "ul child has static class list-unstyled",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group ul child has id when prop id",
          "status": "passed",
          "title": "ul child has id when prop id",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group ul child has attr aria-describedby to be prop ariaDescribedby",
          "status": "passed",
          "title": "ul child has attr aria-describedby to be prop ariaDescribedby",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group ul child has attr aria-describedby to be prop id when not ariaDescribedby",
          "status": "passed",
          "title": "ul child has attr aria-describedby to be prop id when not ariaDescribedby",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group ul child has attr aria-describedby to prefer ariaDescribedby instead of id",
          "status": "passed",
          "title": "ul child has attr aria-describedby to prefer ariaDescribedby instead of id",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group ul child renders default slot",
          "status": "passed",
          "title": "ul child renders default slot",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group has dynamic component whos tag is default header",
          "status": "passed",
          "title": "has dynamic component whos tag is default header",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group has dynamic component is prop headerTag",
          "status": "passed",
          "title": "has dynamic component is prop headerTag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag has attr id to be prop id",
          "status": "passed",
          "title": "dynamic header tag has attr id to be prop id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag has static class dropdown-header",
          "status": "passed",
          "title": "dynamic header tag has static class dropdown-header",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag has class to include prop headerClass",
          "status": "passed",
          "title": "dynamic header tag has class to include prop headerClass",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag has class text-{type} when prop headerVariant",
          "status": "passed",
          "title": "dynamic header tag has class text-{type} when prop headerVariant",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag has role to be undefined when tag is header",
          "status": "passed",
          "title": "dynamic header tag has role to be undefined when tag is header",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag has role to be heading when tag is not header",
          "status": "passed",
          "title": "dynamic header tag has role to be heading when tag is not header",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag renders slot header",
          "status": "passed",
          "title": "dynamic header tag renders slot header",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag renders prop header",
          "status": "passed",
          "title": "dynamic header tag renders prop header",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-group"
          ],
          "fullName": " dropdown-group dynamic header tag renders slot header over prop header",
          "status": "passed",
          "title": "dynamic header tag renders slot header over prop header",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908184586,
      "endTime": 1693908184652,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/dropdown-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "dropdown-header"
          ],
          "fullName": " dropdown-header tag is li",
          "status": "passed",
          "title": "tag is li",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-header"
          ],
          "fullName": " dropdown-header has child h6",
          "status": "passed",
          "title": "has child h6",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-header"
          ],
          "fullName": " dropdown-header child h6 has static class dropdown-header",
          "status": "passed",
          "title": "child h6 has static class dropdown-header",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-header"
          ],
          "fullName": " dropdown-header child h6 renders default slot",
          "status": "passed",
          "title": "child h6 renders default slot",
          "duration": 13,
          "failureMessages": []
        }
      ],
      "startTime": 1693908195940,
      "endTime": 1693908195969,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/dropdown-header.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button tag is li",
          "status": "passed",
          "title": "tag is li",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button has static attr role to be presentation",
          "status": "passed",
          "title": "has static attr role to be presentation",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button has child button",
          "status": "passed",
          "title": "has child button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button child button has static class dropdown-item",
          "status": "passed",
          "title": "child button has static class dropdown-item",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button child button has static attr role to be menu",
          "status": "passed",
          "title": "child button has static attr role to be menu",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button child button has static attr type to be button",
          "status": "passed",
          "title": "child button has static attr type to be button",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button child button has class of prop activeClass when prop active",
          "status": "passed",
          "title": "child button has class of prop activeClass when prop active",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button child button has class of prop activeClass to be active by default",
          "status": "passed",
          "title": "child button has class of prop activeClass to be active by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button child button has class disabled when prop disabled",
          "status": "passed",
          "title": "child button has class disabled when prop disabled",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button child button has class text-{type} when prop variant",
          "status": "passed",
          "title": "child button has class text-{type} when prop variant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button child button has attr disabled",
          "status": "passed",
          "title": "child button has attr disabled",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button emits click when button is clicked",
          "status": "passed",
          "title": "emits click when button is clicked",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button click emit sends MouseEvent",
          "status": "passed",
          "title": "click emit sends MouseEvent",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item-button"
          ],
          "fullName": " dropdown-item-button button has class to include prop buttonClass",
          "status": "passed",
          "title": "button has class to include prop buttonClass",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908186051,
      "endTime": 1693908186110,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/dropdown-item-button.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item is tag li",
          "status": "passed",
          "title": "is tag li",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item has static attr role to be presentation",
          "status": "passed",
          "title": "has static attr role to be presentation",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item has child with dynamic tag of button by default",
          "status": "passed",
          "title": "has child with dynamic tag of button by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item child is tag a when prop href",
          "status": "passed",
          "title": "child is tag a when prop href",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item child is tag BLink when prop to",
          "status": "passed",
          "title": "child is tag BLink when prop to",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item child is tag prefers a over blink",
          "status": "passed",
          "title": "child is tag prefers a over blink",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item child is tag prefers Blink over button",
          "status": "passed",
          "title": "child is tag prefers Blink over button",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button child contains static class dropdown-item",
          "status": "passed",
          "title": "button child contains static class dropdown-item",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button renders default slot",
          "status": "passed",
          "title": "button renders default slot",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button contains prop link class as class",
          "status": "passed",
          "title": "button contains prop link class as class",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has class active when prop active",
          "status": "passed",
          "title": "button has class active when prop active",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has class disabled when prop disabled",
          "status": "passed",
          "title": "button has class disabled when prop disabled",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has class text-{type} when prop variant",
          "status": "passed",
          "title": "button has class text-{type} when prop variant",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item emits a click event when clicked",
          "status": "passed",
          "title": "emits a click event when clicked",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item click event passes value MouseEvent",
          "status": "passed",
          "title": "click event passes value MouseEvent",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item does not emit click when disabled",
          "status": "passed",
          "title": "does not emit click when disabled",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has disabled attr when prop disabled",
          "status": "passed",
          "title": "button has disabled attr when prop disabled",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has aria-current attr when prop active",
          "status": "passed",
          "title": "button has aria-current attr when prop active",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has href attr when prop href",
          "status": "passed",
          "title": "button has href attr when prop href",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has rel attr when prop rel",
          "status": "passed",
          "title": "button has rel attr when prop rel",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has target attr when prop target",
          "status": "passed",
          "title": "button has target attr when prop target",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item button has type button when tag is button",
          "status": "failed",
          "title": "button has type button when tag is button",
          "duration": 9,
          "failureMessages": [
            "expected undefined to be 'button' // Object.is equality"
          ],
          "location": {
            "line": 188,
            "column": 40
          }
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-item"
          ],
          "fullName": " dropdown-item does not have type button when tag is not button",
          "status": "failed",
          "title": "does not have type button when tag is not button",
          "duration": 7,
          "failureMessages": [
            "expected 'button' to be undefined"
          ],
          "location": {
            "line": 196,
            "column": 35
          }
        }
      ],
      "startTime": 1693908174353,
      "endTime": 1693908174442,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/dropdown-item.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text is tag li",
          "status": "passed",
          "title": "is tag li",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text has static attr role to be presentation",
          "status": "passed",
          "title": "has static attr role to be presentation",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text has a child p tag",
          "status": "passed",
          "title": "has a child p tag",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text child p tag has static class px-4",
          "status": "passed",
          "title": "child p tag has static class px-4",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text child p tag has static class mb-0",
          "status": "passed",
          "title": "child p tag has static class mb-0",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text child p tag has static class text-body-secondary",
          "status": "passed",
          "title": "child p tag has static class text-body-secondary",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text child p tag has static class py-1",
          "status": "passed",
          "title": "child p tag has static class py-1",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown-text"
          ],
          "fullName": " dropdown-text renders default slot over prop text",
          "status": "passed",
          "title": "renders default slot over prop text",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908192238,
      "endTime": 1693908192275,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/dropdown-text.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 42,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown has static class btn-group",
          "status": "passed",
          "title": "has static class btn-group",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown has class d-grid when prop block",
          "status": "passed",
          "title": "has class d-grid when prop block",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown has class d-flex when prop block aand prop split",
          "status": "passed",
          "title": "has class d-flex when prop block aand prop split",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown has child ul",
          "status": "passed",
          "title": "has child ul",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown child ul has static class dropdown-menu",
          "status": "passed",
          "title": "child ul has static class dropdown-menu",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown child ul has attr role to be prop role",
          "status": "passed",
          "title": "child ul has attr role to be prop role",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown child ul has prop role default to be menu",
          "status": "passed",
          "title": "child ul has prop role default to be menu",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown child ul has attr aria-labelledby to be defined by default",
          "status": "passed",
          "title": "child ul has attr aria-labelledby to be defined by default",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown child ul has attr aria-labelledby contains prop id",
          "status": "passed",
          "title": "child ul has attr aria-labelledby contains prop id",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown child ul has class from prop menuClass",
          "status": "passed",
          "title": "child ul has class from prop menuClass",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown child ul has class dropdown-menu-end when prop right",
          "status": "failed",
          "title": "child ul has class dropdown-menu-end when prop right",
          "duration": 17,
          "failureMessages": [
            "expected [ 'dropdown-menu', 'show' ] to include 'dropdown-menu-end'"
          ],
          "location": {
            "line": 93,
            "column": 27
          }
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown child ul renders default slot",
          "status": "passed",
          "title": "child ul renders default slot",
          "duration": 19,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown has child BButton",
          "status": "passed",
          "title": "has child BButton",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has prop id",
          "status": "passed",
          "title": "first child BButton has prop id",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has attr id to contain prop id",
          "status": "passed",
          "title": "first child BButton has attr id to contain prop id",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton prop variant to be prop splitVariant",
          "status": "passed",
          "title": "first child BButton prop variant to be prop splitVariant",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton prop variant to be prop variant",
          "status": "passed",
          "title": "first child BButton prop variant to be prop variant",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton prop variant prefers splitVariant over variant",
          "status": "passed",
          "title": "first child BButton prop variant prefers splitVariant over variant",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton prop size is prop size",
          "status": "passed",
          "title": "first child BButton prop size is prop size",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has class nav-link when prop isNav",
          "status": "passed",
          "title": "first child BButton has class nav-link when prop isNav",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has class dropdown-toggle when not prop split",
          "status": "passed",
          "title": "first child BButton has class dropdown-toggle when not prop split",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has class dropdown-toggle-no-caret when prop noCaret and not split",
          "status": "passed",
          "title": "first child BButton has class dropdown-toggle-no-caret when prop noCaret and not split",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has class w-100 when prop split and prop block",
          "status": "passed",
          "title": "first child BButton has class w-100 when prop split and prop block",
          "duration": 22,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has prop disabled to be prop disabled",
          "status": "passed",
          "title": "first child BButton has prop disabled to be prop disabled",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has prop type to be prop splitButtonType",
          "status": "passed",
          "title": "first child BButton has prop type to be prop splitButtonType",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton has class prop splitClass when prop split",
          "status": "passed",
          "title": "first child BButton has class prop splitClass when prop split",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton contains class toggleClass when not prop split",
          "status": "passed",
          "title": "first child BButton contains class toggleClass when not prop split",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton prefers splitClass when prop split",
          "status": "passed",
          "title": "first child BButton prefers splitClass when prop split",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton attr aria-expanded is false by default",
          "status": "passed",
          "title": "first child BButton attr aria-expanded is false by default",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton attr aria-expanded is undefined when prop split",
          "status": "passed",
          "title": "first child BButton attr aria-expanded is undefined when prop split",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton attr href is undefined by default",
          "status": "passed",
          "title": "first child BButton attr href is undefined by default",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton attr href is prop splitHref when prop split",
          "status": "passed",
          "title": "first child BButton attr href is prop splitHref when prop split",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton renders button-content slot",
          "status": "passed",
          "title": "first child BButton renders button-content slot",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton renders prop text",
          "status": "passed",
          "title": "first child BButton renders prop text",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton prefers to render slot button-content over prop text",
          "status": "passed",
          "title": "first child BButton prefers to render slot button-content over prop text",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton emits click when prop split",
          "status": "passed",
          "title": "first child BButton emits click when prop split",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton does not emit click when not prop split",
          "status": "passed",
          "title": "first child BButton does not emit click when not prop split",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton emits click when prop split",
          "status": "passed",
          "title": "first child BButton emits click when prop split",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown first child BButton click event is instanceOf MouseEvent",
          "status": "passed",
          "title": "first child BButton click event is instanceOf MouseEvent",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton does not exist when not prop split",
          "status": "passed",
          "title": "second child BButton does not exist when not prop split",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton exists when prop split",
          "status": "passed",
          "title": "second child BButton exists when prop split",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton has static class dropdown-toggle-split",
          "status": "passed",
          "title": "second child BButton has static class dropdown-toggle-split",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton has static class dropdown-toggle",
          "status": "passed",
          "title": "second child BButton has static class dropdown-toggle",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton has prop variant to be prop variant",
          "status": "passed",
          "title": "second child BButton has prop variant to be prop variant",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton has prop size to be prop size",
          "status": "passed",
          "title": "second child BButton has prop size to be prop size",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton has prop disabled to be prop disabled",
          "status": "passed",
          "title": "second child BButton has prop disabled to be prop disabled",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton has class to be prop toggleClass",
          "status": "passed",
          "title": "second child BButton has class to be prop toggleClass",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton has static attr aria-expanded to be false",
          "status": "passed",
          "title": "second child BButton has static attr aria-expanded to be false",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton has a span child",
          "status": "passed",
          "title": "second child BButton has a span child",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton span child has static class visually-hidden",
          "status": "passed",
          "title": "second child BButton span child has static class visually-hidden",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton span child renders slot toggleText",
          "status": "passed",
          "title": "second child BButton span child renders slot toggleText",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton span child renders prop toggleText",
          "status": "passed",
          "title": "second child BButton span child renders prop toggleText",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton span prefers to render slot toggle-text over prop toggleText",
          "status": "passed",
          "title": "second child BButton span prefers to render slot toggle-text over prop toggleText",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "dropdown"
          ],
          "fullName": " dropdown second child BButton emits toggle when clicked",
          "status": "passed",
          "title": "second child BButton emits toggle when clicked",
          "duration": 7,
          "failureMessages": []
        }
      ],
      "startTime": 1693908172127,
      "endTime": 1693908172637,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/dropdown.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label has static class form-floating",
          "status": "passed",
          "title": "has static class form-floating",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label prefers to render slot default over prop text",
          "status": "passed",
          "title": "prefers to render slot default over prop text",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label has child label",
          "status": "passed",
          "title": "has child label",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label child label has attr for to be labelFor",
          "status": "passed",
          "title": "child label has attr for to be labelFor",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label child label renders slot label",
          "status": "passed",
          "title": "child label renders slot label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label child label renders props label",
          "status": "passed",
          "title": "child label renders props label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label child label prefers to render slot label over prop label",
          "status": "passed",
          "title": "child label prefers to render slot label over prop label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-floating-label"
          ],
          "fullName": " form-floating-label renders in the correct order",
          "status": "passed",
          "title": "renders in the correct order",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908189783,
      "endTime": 1693908189828,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-floating-label.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group tag is default fieldset",
          "status": "passed",
          "title": "tag is default fieldset",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group tag is default div",
          "status": "passed",
          "title": "tag is default div",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group has class is-valid when prop state is true",
          "status": "passed",
          "title": "has class is-valid when prop state is true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group has class is-invalid when prop state is false",
          "status": "passed",
          "title": "has class is-invalid when prop state is false",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group does not contain a valid class when prop state is null",
          "status": "passed",
          "title": "does not contain a valid class when prop state is null",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group does not contain a valid class when prop state is undefined",
          "status": "passed",
          "title": "does not contain a valid class when prop state is undefined",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group has class was-validated when prop validated true",
          "status": "passed",
          "title": "has class was-validated when prop validated true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group does not have class was-validated when prop validated false",
          "status": "passed",
          "title": "does not have class was-validated when prop validated false",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr id is defined by default",
          "status": "passed",
          "title": "attr id is defined by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr id is prop id",
          "status": "passed",
          "title": "attr id is prop id",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr disabled is false by default",
          "status": "passed",
          "title": "attr disabled is false by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr disabled is true when prop disabled",
          "status": "passed",
          "title": "attr disabled is true when prop disabled",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr disabled is undefined when disabled true but prop labelFor exists",
          "status": "passed",
          "title": "attr disabled is undefined when disabled true but prop labelFor exists",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr disabled is undefined when disabled false but prop labelFor exists",
          "status": "passed",
          "title": "attr disabled is undefined when disabled false but prop labelFor exists",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr role is undefined by default",
          "status": "passed",
          "title": "attr role is undefined by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr role is group when prop labelFor",
          "status": "passed",
          "title": "attr role is group when prop labelFor",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-invalid is undefined by default",
          "status": "passed",
          "title": "attr aria-invalid is undefined by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-invalid is true when prop ariaInvalid is true",
          "status": "passed",
          "title": "attr aria-invalid is true when prop ariaInvalid is true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-invalid is false when prop ariaInvalid is false",
          "status": "passed",
          "title": "attr aria-invalid is false when prop ariaInvalid is false",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-invalid is grammar when prop ariaInvalid is grammar",
          "status": "passed",
          "title": "attr aria-invalid is grammar when prop ariaInvalid is grammar",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-invalid is spelling when prop ariaInvalid is spelling",
          "status": "passed",
          "title": "attr aria-invalid is spelling when prop ariaInvalid is spelling",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-invalid is true when prop state is false",
          "status": "passed",
          "title": "attr aria-invalid is true when prop state is false",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-invalid is true when prop state is false and prop ariaInvalid is false",
          "status": "passed",
          "title": "attr aria-invalid is true when prop state is false and prop ariaInvalid is false",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined by default",
          "status": "passed",
          "title": "attr aria-labelledby is undefined by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when prop labelFor",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when prop labelFor",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has labelCols props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has labelCols props but no label",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has labelColsLg props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has labelColsLg props but no label",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has labelColsMd props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has labelColsMd props but no label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has labelColsSm props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has labelColsSm props but no label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has labelColsXl props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has labelColsXl props but no label",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelCols props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelCols props but also slot label",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelColsLg props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelColsLg props but also slot label",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelColsMd props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelColsMd props but also slot label",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelColsSm props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelColsSm props but also slot label",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelColsXl props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelColsXl props but also slot label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelCols props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelCols props but also prop label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelColsLg props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelColsLg props but also prop label",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelColsMd props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelColsMd props but also prop label",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelColsSm props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelColsSm props but also prop label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has labelColsXl props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has labelColsXl props but also prop label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentCols props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentCols props but also slot label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentColsLg props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentColsLg props but also slot label",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentColsMd props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentColsMd props but also slot label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentColsSm props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentColsSm props but also slot label",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentColsXl props but also slot label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentColsXl props but also slot label",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentCols props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentCols props but also prop label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentColsLg props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentColsLg props but also prop label",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentColsMd props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentColsMd props but also prop label",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentColsSm props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentColsSm props but also prop label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is defined when has contentColsXl props but also prop label",
          "status": "passed",
          "title": "attr aria-labelledby is defined when has contentColsXl props but also prop label",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has contentCols props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has contentCols props but no label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has contentColsLg props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has contentColsLg props but no label",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has contentColsMd props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has contentColsMd props but no label",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has contentColsSm props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has contentColsSm props but no label",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-group"
          ],
          "fullName": " form-group attr aria-labelledby is undefined when has contentColsXl props but no label",
          "status": "passed",
          "title": "attr aria-labelledby is undefined when has contentColsXl props but no label",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908179564,
      "endTime": 1693908179815,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback has class invalid-feedback when not prop tooltip",
          "status": "passed",
          "title": "has class invalid-feedback when not prop tooltip",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback has class invalid-tooltip when prop tooltip",
          "status": "passed",
          "title": "has class invalid-tooltip when prop tooltip",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback has class d-block when prop forceShow",
          "status": "passed",
          "title": "has class d-block when prop forceShow",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback has class d-block when not prop state",
          "status": "passed",
          "title": "has class d-block when not prop state",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback has attr id when prop id",
          "status": "passed",
          "title": "has attr id when prop id",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback has attr id when prop role",
          "status": "passed",
          "title": "has attr id when prop role",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback has attr aria-live when prop aria-live",
          "status": "passed",
          "title": "has attr aria-live when prop aria-live",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback has attr aria-atomic when prop aria-live",
          "status": "passed",
          "title": "has attr aria-atomic when prop aria-live",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-invalid-feedback"
          ],
          "fullName": " form-invalid-feedback renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908187683,
      "endTime": 1693908187742,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-invalid-feedback.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has static attr role to be radiogroup",
          "status": "passed",
          "title": "has static attr role to be radiogroup",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has static class to contain bv-no-focus-ring",
          "status": "passed",
          "title": "has static class to contain bv-no-focus-ring",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has static attr role to be radiogroup",
          "status": "passed",
          "title": "has static attr role to be radiogroup",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has attr id to be defined",
          "status": "passed",
          "title": "has attr id to be defined",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has attr id contains content from prop id",
          "status": "passed",
          "title": "has attr id contains content from prop id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has b-form-radio",
          "status": "passed",
          "title": "has b-form-radio",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has class was-validated when prop validated",
          "status": "passed",
          "title": "has class was-validated when prop validated",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has class btn-group when prop buttons",
          "status": "passed",
          "title": "has class btn-group when prop buttons",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group does not have class btn-group when prop buttons but also prop stacked is true",
          "status": "passed",
          "title": "does not have class btn-group when prop buttons but also prop stacked is true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has class btn-group-{type} when prop size",
          "status": "passed",
          "title": "has class btn-group-{type} when prop size",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has attr aria-required when prop required",
          "status": "passed",
          "title": "has attr aria-required when prop required",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has attr aria-invalid when prop ariaInvalid",
          "status": "passed",
          "title": "has attr aria-invalid when prop ariaInvalid",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has attr aria-invalid to be true when state is false and ariaInvalid is false",
          "status": "passed",
          "title": "has attr aria-invalid to be true when state is false and ariaInvalid is false",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has attr aria-invalid to be true when state is false and ariaInvalid is undefined",
          "status": "passed",
          "title": "has attr aria-invalid to be true when state is false and ariaInvalid is undefined",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio-group"
          ],
          "fullName": " form-radio-group has attr aria-invalid to be undefined when state is undefined and ariaInvalid is undefined",
          "status": "passed",
          "title": "has attr aria-invalid to be undefined when state is undefined and ariaInvalid is undefined",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908186443,
      "endTime": 1693908186505,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-radio-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has class form-check if prop plain and prop button are false",
          "status": "passed",
          "title": "has class form-check if prop plain and prop button are false",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has class form-check if prop plain and prop button are true",
          "status": "passed",
          "title": "has class form-check if prop plain and prop button are true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio does not have class form-check if prop plain false and prop button true",
          "status": "passed",
          "title": "does not have class form-check if prop plain false and prop button true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio does not have class form-check if prop plain true and prop button false",
          "status": "passed",
          "title": "does not have class form-check if prop plain true and prop button false",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has class form-check-inline when prop inline",
          "status": "passed",
          "title": "has class form-check-inline when prop inline",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has class form-check-inline when prop inline",
          "status": "passed",
          "title": "has class form-check-inline when prop inline",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio does not have class form-switch when prop switch is false",
          "status": "passed",
          "title": "does not have class form-switch when prop switch is false",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has class form-control-{type} when prop size",
          "status": "passed",
          "title": "has class form-control-{type} when prop size",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio does not have class form-control-{type} when prop size undefined",
          "status": "passed",
          "title": "does not have class form-control-{type} when prop size undefined",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has does not have class form-control-{type} when prop size is md",
          "status": "passed",
          "title": "has does not have class form-control-{type} when prop size is md",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has input element",
          "status": "passed",
          "title": "has input element",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr id",
          "status": "passed",
          "title": "input element has attr id",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element attr id contains content from prop id",
          "status": "passed",
          "title": "input element attr id contains content from prop id",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr type to be radio",
          "status": "passed",
          "title": "input element has attr type to be radio",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has class form-check-input when prop plain and prop button are false",
          "status": "passed",
          "title": "input element has class form-check-input when prop plain and prop button are false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have class form-check-input when prop plain and prop button false",
          "status": "passed",
          "title": "input element does not have class form-check-input when prop plain and prop button false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have class form-check-input when prop plain false and prop button true",
          "status": "passed",
          "title": "input element does not have class form-check-input when prop plain false and prop button true",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have class form-check-input when prop plain and prop button are true",
          "status": "passed",
          "title": "input element does not have class form-check-input when prop plain and prop button are true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has class form-check-input when prop plain and prop button are undefined",
          "status": "passed",
          "title": "input element has class form-check-input when prop plain and prop button are undefined",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has class btn-check when prop button is true",
          "status": "passed",
          "title": "input element has class btn-check when prop button is true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have class btn-check when prop button is false",
          "status": "passed",
          "title": "input element does not have class btn-check when prop button is false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have class btn-check when prop button is undefined",
          "status": "passed",
          "title": "input element does not have class btn-check when prop button is undefined",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr disabled when prop disabled",
          "status": "passed",
          "title": "input element has attr disabled when prop disabled",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have attr disabled when prop disabled is false",
          "status": "passed",
          "title": "input element does not have attr disabled when prop disabled is false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have attr disabled when prop disabled is undefined",
          "status": "passed",
          "title": "input element does not have attr disabled when prop disabled is undefined",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr required when prop name and prop required",
          "status": "passed",
          "title": "input element has attr required when prop name and prop required",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have attr required when prop name is empty string and prop required",
          "status": "passed",
          "title": "input element does not have attr required when prop name is empty string and prop required",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have attr required when prop name is undefined and prop required",
          "status": "passed",
          "title": "input element does not have attr required when prop name is undefined and prop required",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have attr required when prop name and prop required false",
          "status": "passed",
          "title": "input element does not have attr required when prop name and prop required false",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have attr required when prop name and prop required undefined",
          "status": "passed",
          "title": "input element does not have attr required when prop name and prop required undefined",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr name to be prop name",
          "status": "passed",
          "title": "input element has attr name to be prop name",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr name is undefined when prop name undefined",
          "status": "passed",
          "title": "input element has attr name is undefined when prop name undefined",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr form to be prop form",
          "status": "passed",
          "title": "input element has attr form to be prop form",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr form is undefined when prop form undefined",
          "status": "passed",
          "title": "input element has attr form is undefined when prop form undefined",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr aria-label to be prop ariaLabel",
          "status": "passed",
          "title": "input element has attr aria-label to be prop ariaLabel",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr aria-label is undefined when prop ariaLabel undefined",
          "status": "passed",
          "title": "input element has attr aria-label is undefined when prop ariaLabel undefined",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr aria-labelledby to be prop ariaLabelledby",
          "status": "passed",
          "title": "input element has attr aria-labelledby to be prop ariaLabelledby",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr aria-labelledby is undefined when prop ariaLabelledby undefined",
          "status": "passed",
          "title": "input element has attr aria-labelledby is undefined when prop ariaLabelledby undefined",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr aria-labelledby to be prop ariaLabelledby",
          "status": "passed",
          "title": "input element has attr aria-labelledby to be prop ariaLabelledby",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr aria-labelledby is undefined when prop ariaLabelledby undefined",
          "status": "passed",
          "title": "input element has attr aria-labelledby is undefined when prop ariaLabelledby undefined",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr value to be prop value",
          "status": "passed",
          "title": "input element has attr value to be prop value",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element has attr value to be true when value is undefined",
          "status": "passed",
          "title": "input element has attr value to be true when value is undefined",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element aria-required when prop name and prop required true",
          "status": "passed",
          "title": "input element aria-required when prop name and prop required true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have aria-required when prop name is empty string and prop required true",
          "status": "passed",
          "title": "input element does not have aria-required when prop name is empty string and prop required true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio input element does not have aria-required when prop name and prop required false",
          "status": "passed",
          "title": "input element does not have aria-required when prop name and prop required false",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has child label by default",
          "status": "passed",
          "title": "has child label by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio does not have child label when prop plain is true",
          "status": "passed",
          "title": "does not have child label when prop plain is true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has child label when prop plain is false",
          "status": "passed",
          "title": "has child label when prop plain is false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has child label when prop plain is false but has default slot",
          "status": "passed",
          "title": "has child label when prop plain is false but has default slot",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio has child label when prop plain is true but has default slot",
          "status": "passed",
          "title": "has child label when prop plain is true but has default slot",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label has attr for to be defined by default",
          "status": "passed",
          "title": "child label has attr for to be defined by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label has attr for is prop id",
          "status": "passed",
          "title": "child label has attr for is prop id",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label attr for is same as input id",
          "status": "passed",
          "title": "child label attr for is same as input id",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class focus by default",
          "status": "passed",
          "title": "child label does not have class focus by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label removes class focus when input is blurred after focus",
          "status": "passed",
          "title": "child label removes class focus when input is blurred after focus",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label has class form-check-label when prop plain and prop button are false",
          "status": "passed",
          "title": "child label has class form-check-label when prop plain and prop button are false",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label has class form-check-label when prop plain and prop button are false",
          "status": "passed",
          "title": "child label has class form-check-label when prop plain and prop button are false",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class form-check-label when prop plain true and prop button false",
          "status": "passed",
          "title": "child label does not have class form-check-label when prop plain true and prop button false",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class form-check-label when prop plain false and prop button true",
          "status": "passed",
          "title": "child label does not have class form-check-label when prop plain false and prop button true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class form-check-label when prop plain and prop button are true",
          "status": "passed",
          "title": "child label does not have class form-check-label when prop plain and prop button are true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label has class btn when prop button",
          "status": "passed",
          "title": "child label has class btn when prop button",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class btn when prop button false",
          "status": "passed",
          "title": "child label does not have class btn when prop button false",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label has class btn-{type} when prop button and prop buttonVariant",
          "status": "passed",
          "title": "child label has class btn-{type} when prop button and prop buttonVariant",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class btn-{type} when prop button false and prop buttonVariant",
          "status": "passed",
          "title": "child label does not have class btn-{type} when prop button false and prop buttonVariant",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class btn-{type} when prop button true and prop buttonVariant undefined",
          "status": "passed",
          "title": "child label does not have class btn-{type} when prop button true and prop buttonVariant undefined",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label has class btn-{type} when prop button and prop size",
          "status": "passed",
          "title": "child label has class btn-{type} when prop button and prop size",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class btn-{type} when prop button false and prop size",
          "status": "passed",
          "title": "child label does not have class btn-{type} when prop button false and prop size",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class btn-{type} when prop button true and prop size undefined",
          "status": "passed",
          "title": "child label does not have class btn-{type} when prop button true and prop size undefined",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label does not have class btn-md when prop button true and prop size md",
          "status": "passed",
          "title": "child label does not have class btn-md when prop button true and prop size md",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label has class active when value and modelValue are not the same",
          "status": "passed",
          "title": "child label has class active when value and modelValue are not the same",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-radio"
          ],
          "fullName": " form-radio child label renders default slot",
          "status": "passed",
          "title": "child label renders default slot",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908178480,
      "endTime": 1693908178776,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-radio.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-row"
          ],
          "fullName": " form-row tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-row"
          ],
          "fullName": " form-row tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-row"
          ],
          "fullName": " form-row has static class row",
          "status": "passed",
          "title": "has static class row",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-row"
          ],
          "fullName": " form-row has static class d-flex",
          "status": "passed",
          "title": "has static class d-flex",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-row"
          ],
          "fullName": " form-row has static class flex-wrap",
          "status": "passed",
          "title": "has static class flex-wrap",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-row"
          ],
          "fullName": " form-row renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 11,
          "failureMessages": []
        }
      ],
      "startTime": 1693908194353,
      "endTime": 1693908194380,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-row.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-select-option-group"
          ],
          "fullName": " form-select-option-group has expected default structure",
          "status": "passed",
          "title": "has expected default structure",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-select-option-group"
          ],
          "fullName": " form-select-option-group has option elements from simple options array",
          "status": "passed",
          "title": "has option elements from simple options array",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-select-option-group"
          ],
          "fullName": " form-select-option-group has option elements from options array of objects",
          "status": "passed",
          "title": "has option elements from options array of objects",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-select-option-group"
          ],
          "fullName": " form-select-option-group has option elements from options legacy object format",
          "status": "passed",
          "title": "has option elements from options legacy object format",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-select-option-group"
          ],
          "fullName": " form-select-option-group has option elements from default slot",
          "status": "passed",
          "title": "has option elements from default slot",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908193879,
      "endTime": 1693908193909,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-select-option-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-select-option"
          ],
          "fullName": " form-select-option has expected default structure",
          "status": "passed",
          "title": "has expected default structure",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-select-option"
          ],
          "fullName": " form-select-option renders default slot content",
          "status": "passed",
          "title": "renders default slot content",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-select-option"
          ],
          "fullName": " form-select-option renders HTML as default slot content",
          "status": "passed",
          "title": "renders HTML as default slot content",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-select-option"
          ],
          "fullName": " form-select-option has disabled attribute applied when disabled=true",
          "status": "passed",
          "title": "has disabled attribute applied when disabled=true",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908196673,
      "endTime": 1693908196699,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-select-option.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-tag"
          ],
          "fullName": " form-tag has expected structure",
          "status": "passed",
          "title": "has expected structure",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tag"
          ],
          "fullName": " form-tag renders custom root element",
          "status": "passed",
          "title": "renders custom root element",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tag"
          ],
          "fullName": " form-tag renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tag"
          ],
          "fullName": " form-tag has pill styles when `pill` prop set",
          "status": "passed",
          "title": "has pill styles when `pill` prop set",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tag"
          ],
          "fullName": " form-tag has custom variant when `variant` prop set",
          "status": "passed",
          "title": "has custom variant when `variant` prop set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tag"
          ],
          "fullName": " form-tag emits \"remove\" event when button clicked",
          "status": "passed",
          "title": "emits \"remove\" event when button clicked",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tag"
          ],
          "fullName": " form-tag does not have remove button when `disabled` prop is set",
          "status": "passed",
          "title": "does not have remove button when `disabled` prop is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tag"
          ],
          "fullName": " form-tag does not have remove button when `no-remove` prop is set",
          "status": "passed",
          "title": "does not have remove button when `no-remove` prop is set",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908186790,
      "endTime": 1693908186840,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-tag.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-tags"
          ],
          "fullName": " form-tags has proper root element",
          "status": "passed",
          "title": "has proper root element",
          "duration": 21,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tags"
          ],
          "fullName": " form-tags has proper input element",
          "status": "passed",
          "title": "has proper input element",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tags"
          ],
          "fullName": " form-tags adds new tag",
          "status": "passed",
          "title": "adds new tag",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tags"
          ],
          "fullName": " form-tags renders tag slot",
          "status": "passed",
          "title": "renders tag slot",
          "duration": 26,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-tags"
          ],
          "fullName": " form-tags splits on the separator before adding new tag",
          "status": "passed",
          "title": "splits on the separator before adding new tag",
          "duration": 7,
          "failureMessages": []
        }
      ],
      "startTime": 1693908185228,
      "endTime": 1693908185307,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-tags.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-text"
          ],
          "fullName": " form-text tag is small by default",
          "status": "passed",
          "title": "tag is small by default",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-text"
          ],
          "fullName": " form-text tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-text"
          ],
          "fullName": " form-text has class form-text when not prop inline",
          "status": "passed",
          "title": "has class form-text when not prop inline",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-text"
          ],
          "fullName": " form-text has class text-{type} when prop textVariant",
          "status": "passed",
          "title": "has class text-{type} when prop textVariant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-text"
          ],
          "fullName": " form-text has attr id when prop id",
          "status": "passed",
          "title": "has attr id when prop id",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-text"
          ],
          "fullName": " form-text renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-text"
          ],
          "fullName": " form-text renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-text"
          ],
          "fullName": " form-text renders default slot over propt ext",
          "status": "passed",
          "title": "renders default slot over propt ext",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908190572,
      "endTime": 1693908190616,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-text.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback has class valid-feedback when not prop tooltip",
          "status": "passed",
          "title": "has class valid-feedback when not prop tooltip",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback has class valid-tooltip when prop tooltip",
          "status": "passed",
          "title": "has class valid-tooltip when prop tooltip",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback has class d-block when prop forceShow",
          "status": "passed",
          "title": "has class d-block when prop forceShow",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback has class d-block when prop state",
          "status": "passed",
          "title": "has class d-block when prop state",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback has attr id when prop id",
          "status": "passed",
          "title": "has attr id when prop id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback has attr id when prop role",
          "status": "passed",
          "title": "has attr id when prop role",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback has attr aria-live when prop aria-live",
          "status": "passed",
          "title": "has attr aria-live when prop aria-live",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback has attr aria-atomic when prop aria-live",
          "status": "passed",
          "title": "has attr aria-atomic when prop aria-live",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form-valid-feedback"
          ],
          "fullName": " form-valid-feedback renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1693908185964,
      "endTime": 1693908186023,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form-valid-feedback.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "form"
          ],
          "fullName": " form tag is form",
          "status": "passed",
          "title": "tag is form",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form"
          ],
          "fullName": " form has attr id to be prop id",
          "status": "passed",
          "title": "has attr id to be prop id",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form"
          ],
          "fullName": " form has attr id to be prop novalidate",
          "status": "passed",
          "title": "has attr id to be prop novalidate",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form"
          ],
          "fullName": " form has class form-floating when prop floating",
          "status": "passed",
          "title": "has class form-floating when prop floating",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form"
          ],
          "fullName": " form has class was-validated when prop validated",
          "status": "passed",
          "title": "has class was-validated when prop validated",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form"
          ],
          "fullName": " form emits submit when event submit",
          "status": "passed",
          "title": "emits submit when event submit",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "form"
          ],
          "fullName": " form submit event is instanceOf Event",
          "status": "passed",
          "title": "submit event is instanceOf Event",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908196181,
      "endTime": 1693908196231,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/form.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "input-group-addon"
          ],
          "fullName": " input-group-addon is not wrapped in BInputGroupText when not prop isText",
          "status": "passed",
          "title": "is not wrapped in BInputGroupText when not prop isText",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-addon"
          ],
          "fullName": " input-group-addon is wrapped in BInputGroupText when not isText",
          "status": "passed",
          "title": "is wrapped in BInputGroupText when not isText",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-addon"
          ],
          "fullName": " input-group-addon renders default slot when not prop isText",
          "status": "passed",
          "title": "renders default slot when not prop isText",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-addon"
          ],
          "fullName": " input-group-addon renders default slot in BInputGroupText when not prop isText",
          "status": "passed",
          "title": "renders default slot in BInputGroupText when not prop isText",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908195064,
      "endTime": 1693908195088,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/input-group-addon.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "input-group-append"
          ],
          "fullName": " input-group-append child is BInputGroupAddon",
          "status": "passed",
          "title": "child is BInputGroupAddon",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-append"
          ],
          "fullName": " input-group-append BInputGroupAddon is given prop isText",
          "status": "passed",
          "title": "BInputGroupAddon is given prop isText",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-append"
          ],
          "fullName": " input-group-append renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 8,
          "failureMessages": []
        }
      ],
      "startTime": 1693908199125,
      "endTime": 1693908199143,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/input-group-append.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "input-group-text"
          ],
          "fullName": " input-group-text tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-text"
          ],
          "fullName": " input-group-text tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-text"
          ],
          "fullName": " input-group-text has static class input-group-text",
          "status": "passed",
          "title": "has static class input-group-text",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-text"
          ],
          "fullName": " input-group-text renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-text"
          ],
          "fullName": " input-group-text renders prop text",
          "status": "passed",
          "title": "renders prop text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-text"
          ],
          "fullName": " input-group-text renders default slot over prop text",
          "status": "passed",
          "title": "renders default slot over prop text",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908197888,
      "endTime": 1693908197913,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/input-group-text.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "input-group-prepend"
          ],
          "fullName": " input-group-prepend child is BInputGroupAddon",
          "status": "passed",
          "title": "child is BInputGroupAddon",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-prepend"
          ],
          "fullName": " input-group-prepend BInputGroupAddon is given prop isText",
          "status": "passed",
          "title": "BInputGroupAddon is given prop isText",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group-prepend"
          ],
          "fullName": " input-group-prepend renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        }
      ],
      "startTime": 1693908196865,
      "endTime": 1693908196895,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/input-group.prepend.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has static class input-group",
          "status": "passed",
          "title": "has static class input-group",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has static attr role to be group",
          "status": "passed",
          "title": "has static attr role to be group",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has attr id to be prop id",
          "status": "passed",
          "title": "has attr id to be prop id",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has class input-group-sm when prop size is sm",
          "status": "passed",
          "title": "has class input-group-sm when prop size is sm",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has class input-group-lg when prop size is lg",
          "status": "passed",
          "title": "has class input-group-lg when prop size is lg",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group renders slot prepend",
          "status": "passed",
          "title": "renders slot prepend",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group renders slot append",
          "status": "passed",
          "title": "renders slot append",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group renders default",
          "status": "passed",
          "title": "renders default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group renders in correct order",
          "status": "passed",
          "title": "renders in correct order",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span if prop prepend",
          "status": "passed",
          "title": "has child span if prop prepend",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group child span has static class input-group-text",
          "status": "passed",
          "title": "child span has static class input-group-text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group child span has an additional span element",
          "status": "passed",
          "title": "child span has an additional span element",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group child span further child span element renders prop prepend",
          "status": "passed",
          "title": "child span further child span element renders prop prepend",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span element when prop prependHtml",
          "status": "passed",
          "title": "has child span element when prop prependHtml",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span has further child span when prop prependHtml",
          "status": "passed",
          "title": "has child span has further child span when prop prependHtml",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span has further child renders html",
          "status": "passed",
          "title": "has child span has further child renders html",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span has further child renders html text",
          "status": "passed",
          "title": "has child span has further child renders html text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group child span prefers to render prop prependHtml over prepend",
          "status": "passed",
          "title": "child span prefers to render prop prependHtml over prepend",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group does not have child span if prop prepend, but also slot prepend",
          "status": "passed",
          "title": "does not have child span if prop prepend, but also slot prepend",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group does not have child span if prop append, but also slot append",
          "status": "passed",
          "title": "does not have child span if prop append, but also slot append",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span if prop append",
          "status": "passed",
          "title": "has child span if prop append",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group child span has static class input-group-text",
          "status": "passed",
          "title": "child span has static class input-group-text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group child span has an additional span element",
          "status": "passed",
          "title": "child span has an additional span element",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group child span further child span element renders prop append",
          "status": "passed",
          "title": "child span further child span element renders prop append",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span element when prop appendHtml",
          "status": "passed",
          "title": "has child span element when prop appendHtml",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span has further child span when prop appendHtml",
          "status": "passed",
          "title": "has child span has further child span when prop appendHtml",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span has further child renders html",
          "status": "passed",
          "title": "has child span has further child renders html",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group has child span has further child renders html text",
          "status": "passed",
          "title": "has child span has further child renders html text",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group child span prefers to render prop appendHtml over append",
          "status": "passed",
          "title": "child span prefers to render prop appendHtml over append",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group prop prepend prop append and slot default render in correct order",
          "status": "passed",
          "title": "prop prepend prop append and slot default render in correct order",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "input-group"
          ],
          "fullName": " input-group prop prependHtml prop appendHtml and slot default render in correct order",
          "status": "passed",
          "title": "prop prependHtml prop appendHtml and slot default render in correct order",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908181693,
      "endTime": 1693908181808,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/input-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link has expected default structure",
          "status": "passed",
          "title": "has expected default structure",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link renders content from default slot",
          "status": "passed",
          "title": "renders content from default slot",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link sets attribute href to user supplied value",
          "status": "passed",
          "title": "sets attribute href to user supplied value",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link sets attribute href when user supplied href is hash target",
          "status": "passed",
          "title": "sets attribute href when user supplied href is hash target",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link should set href to string `to` prop",
          "status": "passed",
          "title": "should set href to string `to` prop",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link should set href to path from `to` prop",
          "status": "passed",
          "title": "should set href to path from `to` prop",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link should default rel to `noopener` when target===\"_blank\"",
          "status": "passed",
          "title": "should default rel to `noopener` when target===\"_blank\"",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link should render the given rel to when target===\"_blank\"",
          "status": "passed",
          "title": "should render the given rel to when target===\"_blank\"",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link should add \"active\" class when prop active=true",
          "status": "passed",
          "title": "should add \"active\" class when prop active=true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link",
            "when vue router is used"
          ],
          "fullName": " link when vue router is used should add active class when vue router is used, prop active on BLink is not set and isActive slot prop is true",
          "status": "passed",
          "title": "should add active class when vue router is used, prop active on BLink is not set and isActive slot prop is true",
          "duration": 27,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link",
            "when vue router is used"
          ],
          "fullName": " link when vue router is used should not add active class when vue router is used, prop active on BLink is set to false and isActive slot prop is true",
          "status": "passed",
          "title": "should not add active class when vue router is used, prop active on BLink is set to false and isActive slot prop is true",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link",
            "when vue router is used"
          ],
          "fullName": " link when vue router is used nested views should have both active class when rendering another subview and no active props is set on BLinks",
          "status": "passed",
          "title": "nested views should have both active class when rendering another subview and no active props is set on BLinks",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link",
            "when vue router is used"
          ],
          "fullName": " link when vue router is used BLink should prefer passed active prop over isActive slot prop from RouterLink",
          "status": "passed",
          "title": "BLink should prefer passed active prop over isActive slot prop from RouterLink",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link should add aria-disabled=\"true\" when disabled",
          "status": "passed",
          "title": "should add aria-disabled=\"true\" when disabled",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link"
          ],
          "fullName": " link should add '.disabled' class when prop disabled=true",
          "status": "passed",
          "title": "should add '.disabled' class when prop disabled=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link",
            "click handling"
          ],
          "fullName": " link click handling should invoke click handler bound by Vue when clicked on",
          "status": "passed",
          "title": "should invoke click handler bound by Vue when clicked on",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link",
            "click handling"
          ],
          "fullName": " link click handling should invoke multiple click handlers bound by Vue when clicked on",
          "status": "passed",
          "title": "should invoke multiple click handlers bound by Vue when clicked on",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link",
            "click handling"
          ],
          "fullName": " link click handling should NOT invoke click handler bound by Vue when disabled and clicked",
          "status": "passed",
          "title": "should NOT invoke click handler bound by Vue when disabled and clicked",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "link",
            "click handling"
          ],
          "fullName": " link click handling should NOT invoke click handler bound via \"addEventListener\" when disabled and clicked",
          "status": "passed",
          "title": "should NOT invoke click handler bound via \"addEventListener\" when disabled and clicked",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908180572,
      "endTime": 1693908180703,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/link.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item default should have tag div",
          "status": "passed",
          "title": "default should have tag div",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item default should contain only single class of list-group-item",
          "status": "passed",
          "title": "default should contain only single class of list-group-item",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item default should not have class list-group-item-action",
          "status": "passed",
          "title": "default should not have class list-group-item-action",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item default should not have class active",
          "status": "passed",
          "title": "default should not have class active",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item default should not have class disabled",
          "status": "passed",
          "title": "default should not have class disabled",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item default should not have type attribute",
          "status": "passed",
          "title": "default should not have type attribute",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item default should not have disabled attribute",
          "status": "passed",
          "title": "default should not have disabled attribute",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have disabled class when disabled=true",
          "status": "passed",
          "title": "should have disabled class when disabled=true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have active class when active=true",
          "status": "passed",
          "title": "should have active class when active=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have variant class and base class when variant set",
          "status": "passed",
          "title": "should have variant class and base class when variant set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have tag a when href is set",
          "status": "passed",
          "title": "should have tag a when href is set",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have class list-group-item-action when href is set",
          "status": "passed",
          "title": "should have class list-group-item-action when href is set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have class list-group-item-action when action=true",
          "status": "passed",
          "title": "should have class list-group-item-action when action=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have class list-group-item-action when tag=a",
          "status": "passed",
          "title": "should have class list-group-item-action when tag=a",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have href attribute when href is set",
          "status": "passed",
          "title": "should have href attribute when href is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have tag button when tag=button",
          "status": "passed",
          "title": "should have tag button when tag=button",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have tag a when tag=a",
          "status": "passed",
          "title": "should have tag a when tag=a",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have tag button when button=true",
          "status": "passed",
          "title": "should have tag button when button=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have tag button when button=true and tag=foo",
          "status": "passed",
          "title": "should have tag button when button=true and tag=foo",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should not have href when button=true and href set",
          "status": "passed",
          "title": "should not have href when button=true and href set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have class list-group-item-action when button=true",
          "status": "passed",
          "title": "should have class list-group-item-action when button=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have type=button when button=true",
          "status": "passed",
          "title": "should have type=button when button=true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have type=submit when button=true and attr type=submit",
          "status": "passed",
          "title": "should have type=submit when button=true and attr type=submit",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should not have attribute disabled when button=true and disabled not set",
          "status": "passed",
          "title": "should not have attribute disabled when button=true and disabled not set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have attribute disabled when button=true and disabled=true",
          "status": "passed",
          "title": "should have attribute disabled when button=true and disabled=true",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group > list-group-item"
          ],
          "fullName": " list-group > list-group-item should have tag li when used within b-list-group with mounted=true",
          "status": "passed",
          "title": "should have tag li when used within b-list-group with mounted=true",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908183451,
      "endTime": 1693908183525,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/list-group-item.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group default should have tag div",
          "status": "passed",
          "title": "default should have tag div",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group default should contain only single class of list-group",
          "status": "passed",
          "title": "default should contain only single class of list-group",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group should have tag ul then prop tag=ul",
          "status": "passed",
          "title": "should have tag ul then prop tag=ul",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group should have tag ol then prop numbered=true",
          "status": "passed",
          "title": "should have tag ol then prop numbered=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group should have class list-group-flush when prop flush=true",
          "status": "passed",
          "title": "should have class list-group-flush when prop flush=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group should have class list-group-horizontal when prop horizontal=true",
          "status": "passed",
          "title": "should have class list-group-horizontal when prop horizontal=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group should have class list-group-horizontal-md when prop horizontal=md",
          "status": "passed",
          "title": "should have class list-group-horizontal-md when prop horizontal=md",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group should not have class list-group-horizontal when prop horizontal=true and flush=true",
          "status": "passed",
          "title": "should not have class list-group-horizontal when prop horizontal=true and flush=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group should not have class list-group-horizontal-lg when prop horizontal=lg and flush=true",
          "status": "passed",
          "title": "should not have class list-group-horizontal-lg when prop horizontal=lg and flush=true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "list-group"
          ],
          "fullName": " list-group should accept custom classes",
          "status": "passed",
          "title": "should accept custom classes",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908193876,
      "endTime": 1693908193904,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/list-group.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal has body teleports element set by to property",
          "status": "passed",
          "title": "has body teleports element set by to property",
          "duration": 41,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal has body element",
          "status": "passed",
          "title": "has body element",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has class modal",
          "status": "passed",
          "title": "div has class modal",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has attr id to be prop id",
          "status": "passed",
          "title": "div has attr id to be prop id",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has attr id is defined by default",
          "status": "passed",
          "title": "div has attr id is defined by default",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has attr tabindex to be -1",
          "status": "passed",
          "title": "div has attr tabindex to be -1",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has class from prop modalClass",
          "status": "passed",
          "title": "div has class from prop modalClass",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has class fade when not prop noFade",
          "status": "passed",
          "title": "div has class fade when not prop noFade",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has class fade when prop noFade",
          "status": "passed",
          "title": "div has class fade when prop noFade",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has class show when prop show",
          "status": "passed",
          "title": "div has class show when prop show",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has attrs from attrs",
          "status": "passed",
          "title": "div has attrs from attrs",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div has child div",
          "status": "passed",
          "title": "div has child div",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div has static class modal-dialog",
          "status": "passed",
          "title": "div child div has static class modal-dialog",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div has class modal-fullscreen when prop fullscreen",
          "status": "passed",
          "title": "div child div has class modal-fullscreen when prop fullscreen",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div does not have class modal-fullscreen when not prop fullscreen",
          "status": "passed",
          "title": "div child div does not have class modal-fullscreen when not prop fullscreen",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div has class modal-fullscreen-{type}-down when prop fullscreen is string",
          "status": "passed",
          "title": "div child div has class modal-fullscreen-{type}-down when prop fullscreen is string",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div has class modal-{type} when prop size",
          "status": "passed",
          "title": "div child div has class modal-{type} when prop size",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div has class modal-dialog-centered when prop centered",
          "status": "passed",
          "title": "div child div has class modal-dialog-centered when prop centered",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div does not have class modal-dialog-centered when not prop centered",
          "status": "passed",
          "title": "div child div does not have class modal-dialog-centered when not prop centered",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div has class modal-dialog-scrollable when prop scrollable",
          "status": "passed",
          "title": "div child div has class modal-dialog-scrollable when prop scrollable",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal div child div does not have class modal-dialog-scrollable when not prop scrollable",
          "status": "passed",
          "title": "div child div does not have class modal-dialog-scrollable when not prop scrollable",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal second div has another div by default",
          "status": "passed",
          "title": "second div has another div by default",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal third nested div has static class modal-content",
          "status": "passed",
          "title": "third nested div has static class modal-content",
          "duration": 21,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal third nested div has class from prop contentClass",
          "status": "passed",
          "title": "third nested div has class from prop contentClass",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal second div has nested div when not prop lazy",
          "status": "passed",
          "title": "second div has nested div when not prop lazy",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "modal"
          ],
          "fullName": " modal third nested div has another div",
          "status": "passed",
          "title": "third nested div has another div",
          "duration": 10,
          "failureMessages": []
        }
      ],
      "startTime": 1693908178290,
      "endTime": 1693908178633,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/modal.spec.ts"
    },
    {
      "assertionResults": [],
      "startTime": 1693908165130,
      "endTime": 1693908165130,
      "status": "passed",
      "message": "Failed to load url /components/BForm/BForm.vue (resolved id: /components/BForm/BForm.vue) in C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/nav-form.spec.ts. Does the file exist?",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/nav-form.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "nav-item-dropdown"
          ],
          "fullName": " nav-item-dropdown has static class nav-item",
          "status": "passed",
          "title": "has static class nav-item",
          "duration": 39,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item-dropdown"
          ],
          "fullName": " nav-item-dropdown has static class dropdown",
          "status": "passed",
          "title": "has static class dropdown",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item-dropdown"
          ],
          "fullName": " nav-item-dropdown contains b-dropdown",
          "status": "passed",
          "title": "contains b-dropdown",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item-dropdown"
          ],
          "fullName": " nav-item-dropdown is opened if open called",
          "status": "passed",
          "title": "is opened if open called",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item-dropdown"
          ],
          "fullName": " nav-item-dropdown is closed if close called",
          "status": "passed",
          "title": "is closed if close called",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item-dropdown"
          ],
          "fullName": " nav-item-dropdown is toggled if toggle called",
          "status": "passed",
          "title": "is toggled if toggle called",
          "duration": 13,
          "failureMessages": []
        }
      ],
      "startTime": 1693908182502,
      "endTime": 1693908182598,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/nav-item-dropdown.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item has class nav item",
          "status": "passed",
          "title": "has class nav item",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item contains blink",
          "status": "passed",
          "title": "contains blink",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item blink has nav-link class",
          "status": "passed",
          "title": "blink has nav-link class",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item blink has custom-class class when prop link-class='custom-class'",
          "status": "passed",
          "title": "blink has custom-class class when prop link-class='custom-class'",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item blink has tabindex -1 when prop disabled",
          "status": "passed",
          "title": "blink has tabindex -1 when prop disabled",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item blink has tabindex undefined when prop disabled is false",
          "status": "passed",
          "title": "blink has tabindex undefined when prop disabled is false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item blink has aria disabled true when prop disabled",
          "status": "passed",
          "title": "blink has aria disabled true when prop disabled",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item blink has aria disabled undefined when prop disabled",
          "status": "passed",
          "title": "blink has aria disabled undefined when prop disabled",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-item"
          ],
          "fullName": " nav-item renders content from default slot",
          "status": "passed",
          "title": "renders content from default slot",
          "duration": 13,
          "failureMessages": []
        }
      ],
      "startTime": 1693908188845,
      "endTime": 1693908188899,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/nav-item.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "nav-text"
          ],
          "fullName": " nav-text has class navbar-text",
          "status": "passed",
          "title": "has class navbar-text",
          "duration": 20,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-text"
          ],
          "fullName": " nav-text is tag li",
          "status": "passed",
          "title": "is tag li",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-text"
          ],
          "fullName": " nav-text renders content from default slot",
          "status": "passed",
          "title": "renders content from default slot",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-text"
          ],
          "fullName": " nav-text renders content from prop text",
          "status": "passed",
          "title": "renders content from prop text",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav-text"
          ],
          "fullName": " nav-text prefers to render default slot over prop text",
          "status": "passed",
          "title": "prefers to render default slot over prop text",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1693908197299,
      "endTime": 1693908197343,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/nav-text.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav contains static class nav",
          "status": "passed",
          "title": "contains static class nav",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav is tag ul by default",
          "status": "passed",
          "title": "is tag ul by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav changes tag when prop tag is set",
          "status": "passed",
          "title": "changes tag when prop tag is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class nav-tabs when prop tabs is set",
          "status": "passed",
          "title": "has class nav-tabs when prop tabs is set",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class nav-pills when prop tabs is set",
          "status": "passed",
          "title": "has class nav-pills when prop tabs is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav does not have class nav-pills when prop pills is set, but prop tabs is true",
          "status": "passed",
          "title": "does not have class nav-pills when prop pills is set, but prop tabs is true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class card-header-tabs when prop tabs is set and cardHeader is set",
          "status": "passed",
          "title": "has class card-header-tabs when prop tabs is set and cardHeader is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav does not have class card-header-tabs when prop tabs is set and cardHeader is set, but prop vertical is set",
          "status": "passed",
          "title": "does not have class card-header-tabs when prop tabs is set and cardHeader is set, but prop vertical is set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class card-header-pills when prop pills is set and cardHeader is set",
          "status": "passed",
          "title": "has class card-header-pills when prop pills is set and cardHeader is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav does not have class card-header-pills when prop pills is set and cardHeader is set, but prop vertical is set",
          "status": "passed",
          "title": "does not have class card-header-pills when prop pills is set and cardHeader is set, but prop vertical is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav does not have class card-header-pills when prop pills is set and cardHeader is set, but prop tabs is set",
          "status": "passed",
          "title": "does not have class card-header-pills when prop pills is set and cardHeader is set, but prop tabs is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class flex-column when prop vertical is set",
          "status": "passed",
          "title": "has class flex-column when prop vertical is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class nav-fill when prop fill is set",
          "status": "passed",
          "title": "has class nav-fill when prop fill is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav does not have nav-fill when prop fill is set, but prop vertical is also set",
          "status": "passed",
          "title": "does not have nav-fill when prop fill is set, but prop vertical is also set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class nav-justified when prop justified is set",
          "status": "passed",
          "title": "has class nav-justified when prop justified is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav does not have nav-justified when prop justified is set, but prop vertical is also set",
          "status": "passed",
          "title": "does not have nav-justified when prop justified is set, but prop vertical is also set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class justify-content-{type} when prop align is set",
          "status": "passed",
          "title": "has class justify-content-{type} when prop align is set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav does not have justify-content-{type} when prop align is set, but prop vertical is also set",
          "status": "passed",
          "title": "does not have justify-content-{type} when prop align is set, but prop vertical is also set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "nav"
          ],
          "fullName": " nav has class small when prop small is set",
          "status": "passed",
          "title": "has class small when prop small is set",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908184291,
      "endTime": 1693908184354,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/nav.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "navbar-brand"
          ],
          "fullName": " navbar-brand contains static class navbar-brand",
          "status": "passed",
          "title": "contains static class navbar-brand",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-brand"
          ],
          "fullName": " navbar-brand contains blink when has to prop",
          "status": "passed",
          "title": "contains blink when has to prop",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-brand"
          ],
          "fullName": " navbar-brand contains blink when has href prop",
          "status": "passed",
          "title": "contains blink when has href prop",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-brand"
          ],
          "fullName": " navbar-brand tag is div when not isLink",
          "status": "passed",
          "title": "tag is div when not isLink",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-brand"
          ],
          "fullName": " navbar-brand tag is prop tag when set",
          "status": "passed",
          "title": "tag is prop tag when set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-brand"
          ],
          "fullName": " navbar-brand is still BLINK when tag is set, but isLink",
          "status": "passed",
          "title": "is still BLINK when tag is set, but isLink",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-brand"
          ],
          "fullName": " navbar-brand renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        }
      ],
      "startTime": 1693908190673,
      "endTime": 1693908190713,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/navbar-brand.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "navbar-nav"
          ],
          "fullName": " navbar-nav has static class navbar-nav",
          "status": "passed",
          "title": "has static class navbar-nav",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-nav"
          ],
          "fullName": " navbar-nav is tag ul",
          "status": "passed",
          "title": "is tag ul",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-nav"
          ],
          "fullName": " navbar-nav renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-nav"
          ],
          "fullName": " navbar-nav contains class nav-fill when prop fill set",
          "status": "passed",
          "title": "contains class nav-fill when prop fill set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-nav"
          ],
          "fullName": " navbar-nav contains class nav-justified when prop justified set",
          "status": "passed",
          "title": "contains class nav-justified when prop justified set",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-nav"
          ],
          "fullName": " navbar-nav contains class small when prop small set",
          "status": "passed",
          "title": "contains class small when prop small set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-nav"
          ],
          "fullName": " navbar-nav contains class justify-content-{type} when prop align set",
          "status": "passed",
          "title": "contains class justify-content-{type} when prop align set",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908191800,
      "endTime": 1693908191836,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/navbar-nav.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle contains static class navbar-toggler",
          "status": "passed",
          "title": "contains static class navbar-toggler",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle tag is button",
          "status": "passed",
          "title": "tag is button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle renders default slot custom content",
          "status": "passed",
          "title": "renders default slot custom content",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle button type is button",
          "status": "passed",
          "title": "button type is button",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle has aria-label by default",
          "status": "passed",
          "title": "has aria-label by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle has aria-label when aria-label prop",
          "status": "passed",
          "title": "has aria-label when aria-label prop",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle disabled attribute is undefined by default",
          "status": "passed",
          "title": "disabled attribute is undefined by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle disabled attribute is empty string when true",
          "status": "passed",
          "title": "disabled attribute is empty string when true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle has disabled class when prop disabled",
          "status": "passed",
          "title": "has disabled class when prop disabled",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle emits click when not disabled",
          "status": "passed",
          "title": "emits click when not disabled",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar-toggle"
          ],
          "fullName": " navbar-toggle does not emit click when not disabled",
          "status": "passed",
          "title": "does not emit click when not disabled",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908185029,
      "endTime": 1693908185088,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/navbar-toggle.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar contains static class navbar",
          "status": "passed",
          "title": "contains static class navbar",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar tag is nav by default",
          "status": "passed",
          "title": "tag is nav by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar does not contain role attribute on default",
          "status": "passed",
          "title": "does not contain role attribute on default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar has class navbar-expand by default",
          "status": "passed",
          "title": "has class navbar-expand by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar has class navbar-expand on prop toggleable changes",
          "status": "passed",
          "title": "has class navbar-expand on prop toggleable changes",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar contains role navigation when is not tag nav",
          "status": "passed",
          "title": "contains role navigation when is not tag nav",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar contains class d-print when prop print",
          "status": "passed",
          "title": "contains class d-print when prop print",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar contains class sticky when prop sticky is set",
          "status": "passed",
          "title": "contains class sticky when prop sticky is set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar contains class bg when prop variant is set",
          "status": "passed",
          "title": "contains class bg when prop variant is set",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar contains class fixed when prop fixed is set",
          "status": "passed",
          "title": "contains class fixed when prop fixed is set",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar contains a container-fluid on div child by default",
          "status": "passed",
          "title": "contains a container-fluid on div child by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar contains a container on div child when container prop is true",
          "status": "passed",
          "title": "contains a container on div child when container prop is true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar does not have div child when container prop is false",
          "status": "passed",
          "title": "does not have div child when container prop is false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar renders default slot content when container prop is false",
          "status": "passed",
          "title": "renders default slot content when container prop is false",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar renders default slot content in container child when container prop is Truthy",
          "status": "passed",
          "title": "renders default slot content in container child when container prop is Truthy",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "navbar"
          ],
          "fullName": " navbar renders default slot content in container child",
          "status": "passed",
          "title": "renders default slot content in container child",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908183513,
      "endTime": 1693908183589,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/navbar.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas has body teleports element set by teleportTo property",
          "status": "passed",
          "title": "has body teleports element set by teleportTo property",
          "duration": 33,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas has static class offcanvas",
          "status": "failed",
          "title": "has static class offcanvas",
          "duration": 16,
          "failureMessages": [
            "expected false to be true // Object.is equality"
          ],
          "location": {
            "line": 45,
            "column": 32
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas has tabindex -1",
          "status": "failed",
          "title": "has tabindex -1",
          "duration": 21,
          "failureMessages": [
            "Unable to get .offcanvas within: <!--teleport start-->\n<!--teleport end-->"
          ],
          "location": {
            "line": 50,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas has aria-labelledby offcanvasLabel",
          "status": "failed",
          "title": "has aria-labelledby offcanvasLabel",
          "duration": 8,
          "failureMessages": [
            "Unable to get .offcanvas within: <!--teleport start-->\n<!--teleport end-->"
          ],
          "location": {
            "line": 56,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas has offcanvas-{type} when prop placement",
          "status": "failed",
          "title": "has offcanvas-{type} when prop placement",
          "duration": 15,
          "failureMessages": [
            "Unable to get .offcanvas within: <!--teleport start-->\n<!--teleport end-->"
          ],
          "location": {
            "line": 62,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas has offcanvas-{type} when prop placement not default",
          "status": "failed",
          "title": "has offcanvas-{type} when prop placement not default",
          "duration": 9,
          "failureMessages": [
            "Unable to get .offcanvas within: <!--teleport start-->\n<!--teleport end-->"
          ],
          "location": {
            "line": 70,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas backdrop component exists",
          "status": "passed",
          "title": "backdrop component exists",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas has backdrop",
          "status": "passed",
          "title": "has backdrop",
          "duration": 19,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas  offcanvas-header exists",
          "status": "failed",
          "title": " offcanvas-header exists",
          "duration": 11,
          "failureMessages": [
            "Unable to get .offcanvas within: <!--teleport start-->\n<!--teleport end-->"
          ],
          "location": {
            "line": 109,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div has child h5 with static class offcanvas-title",
          "status": "failed",
          "title": "first child div has child h5 with static class offcanvas-title",
          "duration": 7,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'get')"
          ],
          "location": {
            "line": 117,
            "column": 22
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div has child h5 has id offcanvasLabel",
          "status": "failed",
          "title": "first child div has child h5 has id offcanvasLabel",
          "duration": 11,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'get')"
          ],
          "location": {
            "line": 124,
            "column": 22
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div has child h5 that has slot title",
          "status": "failed",
          "title": "first child div has child h5 that has slot title",
          "duration": 17,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'get')"
          ],
          "location": {
            "line": 133,
            "column": 22
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div has child h5 that has prop title",
          "status": "failed",
          "title": "first child div has child h5 that has prop title",
          "duration": 12,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'get')"
          ],
          "location": {
            "line": 142,
            "column": 22
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div has child BCloseButton",
          "status": "failed",
          "title": "first child div has child BCloseButton",
          "duration": 8,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'findComponent')"
          ],
          "location": {
            "line": 149,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div child BCloseButton has prop type to be button",
          "status": "failed",
          "title": "first child div child BCloseButton has prop type to be button",
          "duration": 8,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'getComponent')"
          ],
          "location": {
            "line": 156,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div child BCloseButton has prop ariaLabel to be default close",
          "status": "failed",
          "title": "first child div child BCloseButton has prop ariaLabel to be default close",
          "duration": 6,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'getComponent')"
          ],
          "location": {
            "line": 163,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div child BCloseButton has prop ariaLabel to be prop dismissLabel",
          "status": "failed",
          "title": "first child div child BCloseButton has prop ariaLabel to be prop dismissLabel",
          "duration": 9,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'getComponent')"
          ],
          "location": {
            "line": 172,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas first child div child BCloseButton has static class text-reset",
          "status": "failed",
          "title": "first child div child BCloseButton has static class text-reset",
          "duration": 9,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'getComponent')"
          ],
          "location": {
            "line": 179,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas second child div has static class offcanvas-body",
          "status": "failed",
          "title": "second child div has static class offcanvas-body",
          "duration": 10,
          "failureMessages": [
            "Cannot call findAll on an empty DOMWrapper."
          ],
          "location": {
            "line": 186,
            "column": 33
          }
        },
        {
          "ancestorTitles": [
            "",
            "offcanvas"
          ],
          "fullName": " offcanvas second child div renders default slot",
          "status": "failed",
          "title": "second child div renders default slot",
          "duration": 11,
          "failureMessages": [
            "Cannot call findAll on an empty DOMWrapper."
          ],
          "location": {
            "line": 195,
            "column": 33
          }
        }
      ],
      "startTime": 1693908172198,
      "endTime": 1693908172445,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/offcanvas.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  tag is default div",
          "status": "passed",
          "title": "tag is default div",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  tag is prop wrapTag",
          "status": "passed",
          "title": "tag is prop wrapTag",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  has static class b-overlay-wrap",
          "status": "passed",
          "title": "has static class b-overlay-wrap",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  has static class b-overlay-wrap",
          "status": "passed",
          "title": "has static class b-overlay-wrap",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  has attr aria-busy when prop show",
          "status": "passed",
          "title": "has attr aria-busy when prop show",
          "duration": 18,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  has child BTransition",
          "status": "passed",
          "title": "has child BTransition",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition is given prop noFade to be noFade",
          "status": "passed",
          "title": "child BTransition is given prop noFade to be noFade",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition is given prop transProps to be static {enterToClass: 'show'}",
          "status": "passed",
          "title": "child BTransition is given prop transProps to be static {enterToClass: 'show'}",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition has child div when prop show true",
          "status": "passed",
          "title": "child BTransition has child div when prop show true",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition does not have child div when prop show false",
          "status": "passed",
          "title": "child BTransition does not have child div when prop show false",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child is tag overlayTag",
          "status": "passed",
          "title": "child BTransition child is tag overlayTag",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child is tag overlayTag has static class b-overlay",
          "status": "passed",
          "title": "child BTransition child is tag overlayTag has static class b-overlay",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has static class b-overlay",
          "status": "passed",
          "title": "child BTransition child div has static class b-overlay",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has class position-fixed when prop noWrap true and prop fixed true",
          "status": "passed",
          "title": "child BTransition child div has class position-fixed when prop noWrap true and prop fixed true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div does not have class position-fixed when prop noWrap false and prop fixed true",
          "status": "passed",
          "title": "child BTransition child div does not have class position-fixed when prop noWrap false and prop fixed true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div does not have class position-fixed when prop noWrap true and prop fixed false",
          "status": "passed",
          "title": "child BTransition child div does not have class position-fixed when prop noWrap true and prop fixed false",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div does not have class position-fixed when prop noWrap false and prop fixed false",
          "status": "passed",
          "title": "child BTransition child div does not have class position-fixed when prop noWrap false and prop fixed false",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has class position-absolute when prop noWrap false",
          "status": "passed",
          "title": "child BTransition child div has class position-absolute when prop noWrap false",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has class position-absolute when prop fixed false",
          "status": "passed",
          "title": "child BTransition child div has class position-absolute when prop fixed false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has class position-absolute when prop fixed true and prop noWrap false",
          "status": "passed",
          "title": "child BTransition child div has class position-absolute when prop fixed true and prop noWrap false",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has class position-absolute when prop fixed false and prop noWrap true",
          "status": "passed",
          "title": "child BTransition child div has class position-absolute when prop fixed false and prop noWrap true",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div does not have class position-absolute when prop noWrap true and prop fixed true",
          "status": "passed",
          "title": "child BTransition child div does not have class position-absolute when prop noWrap true and prop fixed true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has style z-index: 10; by default",
          "status": "passed",
          "title": "child BTransition child div has style z-index: 10; by default",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has style z-index: 5; when prop zIndex is 5",
          "status": "passed",
          "title": "child BTransition child div has style z-index: 5; when prop zIndex is 5",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has style z-index: 5; when prop zIndex is string 5",
          "status": "passed",
          "title": "child BTransition child div has style z-index: 5; when prop zIndex is string 5",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has style z-index: 10; when prop zIndex is 0",
          "status": "passed",
          "title": "child BTransition child div has style z-index: 10; when prop zIndex is 0",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has static style top: 0px;",
          "status": "passed",
          "title": "child BTransition child div has static style top: 0px;",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has static style bottom: 0px;",
          "status": "passed",
          "title": "child BTransition child div has static style bottom: 0px;",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has static style left: 0px;",
          "status": "passed",
          "title": "child BTransition child div has static style left: 0px;",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has static style right: 0px;",
          "status": "passed",
          "title": "child BTransition child div has static style right: 0px;",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  emits click when BTransition child div is clicked",
          "status": "passed",
          "title": "emits click when BTransition child div is clicked",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  click event value is instanceof MouseEvent when BTransition child div",
          "status": "passed",
          "title": "click event value is instanceof MouseEvent when BTransition child div",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has further child div",
          "status": "passed",
          "title": "child BTransition child div has further child div",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has class position-absolute",
          "status": "passed",
          "title": "child BTransition child div first child div has class position-absolute",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has class rounded when prop rounded true",
          "status": "passed",
          "title": "child BTransition child div first child div has class rounded when prop rounded true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has class rounded-3 when prop rounded is string 3",
          "status": "passed",
          "title": "child BTransition child div first child div has class rounded-3 when prop rounded is string 3",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div does not have class rounded when prop rounded false",
          "status": "passed",
          "title": "child BTransition child div first child div does not have class rounded when prop rounded false",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has class bg-{variant} when prop variant",
          "status": "passed",
          "title": "child BTransition child div first child div has class bg-{variant} when prop variant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has class bg-light by default",
          "status": "passed",
          "title": "child BTransition child div first child div has class bg-light by default",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has class bg-light when bgColor empty string",
          "status": "passed",
          "title": "child BTransition child div first child div has class bg-light when bgColor empty string",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div does not have class bg-{variant} when prop variant but also prop bgColor",
          "status": "passed",
          "title": "child BTransition child div first child div does not have class bg-{variant} when prop variant but also prop bgColor",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has static style top: 0px;",
          "status": "passed",
          "title": "child BTransition child div first child div has static style top: 0px;",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has static style bottom: 0px;",
          "status": "passed",
          "title": "child BTransition child div first child div has static style bottom: 0px;",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has static style left: 0px;",
          "status": "passed",
          "title": "child BTransition child div first child div has static style left: 0px;",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has static style right: 0px;",
          "status": "passed",
          "title": "child BTransition child div first child div has static style right: 0px;",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has style opacity: 0.85; by defaault",
          "status": "passed",
          "title": "child BTransition child div first child div has style opacity: 0.85; by defaault",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has style opacity: {num}; when prop opacity",
          "status": "passed",
          "title": "child BTransition child div first child div has style opacity: {num}; when prop opacity",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has style background-color: {type}; prop bgColor",
          "status": "passed",
          "title": "child BTransition child div first child div has style background-color: {type}; prop bgColor",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div does not have style background-color when prop bgColor is empty string",
          "status": "passed",
          "title": "child BTransition child div first child div does not have style background-color when prop bgColor is empty string",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div does not have style background-color by default",
          "status": "passed",
          "title": "child BTransition child div first child div does not have style background-color by default",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div has style backdrop-filter: blur(2px); by default",
          "status": "passed",
          "title": "child BTransition child div first child div has style backdrop-filter: blur(2px); by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div first child div does not have style backdrop-filter when blur is empty string",
          "status": "passed",
          "title": "child BTransition child div first child div does not have style backdrop-filter when blur is empty string",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div has second child div",
          "status": "passed",
          "title": "child BTransition child div has second child div",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div second child div has static class position-absolute",
          "status": "passed",
          "title": "child BTransition child div second child div has static class position-absolute",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div second child div has position styles when prop noCenter",
          "status": "passed",
          "title": "child BTransition child div second child div has position styles when prop noCenter",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div second child div has custom position styles when prop noCenter false",
          "status": "passed",
          "title": "child BTransition child div second child div has custom position styles when prop noCenter false",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div second child div renders slot overlay",
          "status": "passed",
          "title": "child BTransition child div second child div renders slot overlay",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  renders both slot overlay and slot foobar correctly",
          "status": "passed",
          "title": "renders both slot overlay and slot foobar correctly",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div second child div renders a BSpinner by default",
          "status": "passed",
          "title": "child BTransition child div second child div renders a BSpinner by default",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div second child div BSpinner is given prop type to be prop spinnerType",
          "status": "passed",
          "title": "child BTransition child div second child div BSpinner is given prop type to be prop spinnerType",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div second child div BSpinner is given prop type to be prop spinnerType",
          "status": "passed",
          "title": "child BTransition child div second child div BSpinner is given prop type to be prop spinnerType",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            ""
          ],
          "fullName": "  child BTransition child div second child div BSpinner is given prop type to be prop spinnerType",
          "status": "passed",
          "title": "child BTransition child div second child div BSpinner is given prop type to be prop spinnerType",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908176959,
      "endTime": 1693908177341,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/overlay.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination tag is ul",
          "status": "passed",
          "title": "tag is ul",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has static class pagination",
          "status": "passed",
          "title": "has static class pagination",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has static attr role menubar",
          "status": "passed",
          "title": "has static attr role menubar",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has attr aria-disabled when prop disabled",
          "status": "passed",
          "title": "has attr aria-disabled when prop disabled",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has attr aria-label when prop ariaLabel",
          "status": "passed",
          "title": "has attr aria-label when prop ariaLabel",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination attr aria-label is default Pagination",
          "status": "passed",
          "title": "attr aria-label is default Pagination",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination attr aria-label is undefined when empty string",
          "status": "passed",
          "title": "attr aria-label is undefined when empty string",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has class b-pagination-pills when prop pills",
          "status": "passed",
          "title": "has class b-pagination-pills when prop pills",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has class justify-content-start",
          "status": "passed",
          "title": "has class justify-content-start",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has class justify-content-end when prop align is end",
          "status": "passed",
          "title": "has class justify-content-end when prop align is end",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has class justify-content-end when prop align is center",
          "status": "passed",
          "title": "has class justify-content-end when prop align is center",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination has a li child",
          "status": "passed",
          "title": "has a li child",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination li child has static class page item",
          "status": "passed",
          "title": "li child has static class page item",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "pagination"
          ],
          "fullName": " pagination li child has static class page item",
          "status": "passed",
          "title": "li child has static class page item",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908184388,
      "endTime": 1693908184459,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/pagination.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button is BPlaceholder",
          "status": "passed",
          "title": "is BPlaceholder",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has class btn",
          "status": "failed",
          "title": "BPlaceholder has class btn",
          "duration": 12,
          "failureMessages": [
            "expected [] to include 'btn'"
          ],
          "location": {
            "line": 18,
            "column": 36
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has class disabled",
          "status": "failed",
          "title": "BPlaceholder has class disabled",
          "duration": 4,
          "failureMessages": [
            "expected [] to include 'disabled'"
          ],
          "location": {
            "line": 24,
            "column": 36
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has class btn-primary by default",
          "status": "failed",
          "title": "BPlaceholder has class btn-primary by default",
          "duration": 5,
          "failureMessages": [
            "expected [] to include 'btn-primary'"
          ],
          "location": {
            "line": 30,
            "column": 36
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has class btn-{type} when prop variant",
          "status": "failed",
          "title": "BPlaceholder has class btn-{type} when prop variant",
          "duration": 5,
          "failureMessages": [
            "expected [] to include 'btn-danger'"
          ],
          "location": {
            "line": 38,
            "column": 36
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has prop tag to be div by default",
          "status": "passed",
          "title": "BPlaceholder has prop tag to be div by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has prop tag to be prop tag",
          "status": "passed",
          "title": "BPlaceholder has prop tag to be prop tag",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has prop width to be div by default",
          "status": "passed",
          "title": "BPlaceholder has prop width to be div by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has prop width to be prop width",
          "status": "passed",
          "title": "BPlaceholder has prop width to be prop width",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has prop cols to be div by default",
          "status": "failed",
          "title": "BPlaceholder has prop cols to be div by default",
          "duration": 4,
          "failureMessages": [
            "expected 12 to be undefined"
          ],
          "location": {
            "line": 72,
            "column": 40
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has prop cols to be prop cols",
          "status": "passed",
          "title": "BPlaceholder has prop cols to be prop cols",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has prop animation to be div by default",
          "status": "passed",
          "title": "BPlaceholder has prop animation to be div by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-button"
          ],
          "fullName": " placeholder-button BPlaceholder has prop animation to be prop animation",
          "status": "passed",
          "title": "BPlaceholder has prop animation to be prop animation",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908174642,
      "endTime": 1693908174705,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/placeholder-button.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card renders a BCard",
          "status": "passed",
          "title": "renders a BCard",
          "duration": 37,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCard renders a BCardImg",
          "status": "passed",
          "title": "BCard renders a BCardImg",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop blank to be true by default",
          "status": "passed",
          "title": "BCardImg has prop blank to be true by default",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop blank to be false when prop imgSrc",
          "status": "passed",
          "title": "BCardImg has prop blank to be false when prop imgSrc",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop blankColor to be #868e96 by default",
          "status": "passed",
          "title": "BCardImg has prop blankColor to be #868e96 by default",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop blankColor to be prop imgBlankColor",
          "status": "passed",
          "title": "BCardImg has prop blankColor to be prop imgBlankColor",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop height to be 100 by default",
          "status": "passed",
          "title": "BCardImg has prop height to be 100 by default",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop height to be prop imgBlankColor",
          "status": "passed",
          "title": "BCardImg has prop height to be prop imgBlankColor",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop height to be undefined when imgSrc",
          "status": "passed",
          "title": "BCardImg has prop height to be undefined when imgSrc",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop src to be imgSrc",
          "status": "passed",
          "title": "BCardImg has prop src to be imgSrc",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop top false when prop imgBottom",
          "status": "passed",
          "title": "BCardImg has prop top false when prop imgBottom",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop top true when not prop imgBottom",
          "status": "passed",
          "title": "BCardImg has prop top true when not prop imgBottom",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop bottom true when prop imgBottom",
          "status": "passed",
          "title": "BCardImg has prop bottom true when prop imgBottom",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BCardImg has prop bottom false when not prop imgBottom",
          "status": "passed",
          "title": "BCardImg has prop bottom false when not prop imgBottom",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card does not have BCardImg when slot img",
          "status": "passed",
          "title": "does not have BCardImg when slot img",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card renders slot img",
          "status": "passed",
          "title": "renders slot img",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card does not render slot img when prop noImg",
          "status": "passed",
          "title": "does not render slot img when prop noImg",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card does not have BCardImg when prop noImg",
          "status": "passed",
          "title": "does not have BCardImg when prop noImg",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card renders slot header",
          "status": "passed",
          "title": "renders slot header",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card has bplaceholder by default",
          "status": "passed",
          "title": "has bplaceholder by default",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card placeholder has prop width to be prop headerWidth",
          "status": "passed",
          "title": "placeholder has prop width to be prop headerWidth",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card placeholder has prop width to be default 100",
          "status": "passed",
          "title": "placeholder has prop width to be default 100",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card placeholder has prop variant to be prop headerWidth",
          "status": "passed",
          "title": "placeholder has prop variant to be prop headerWidth",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card placeholder has prop variant to be default undefined",
          "status": "passed",
          "title": "placeholder has prop variant to be default undefined",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card placeholder has prop animation to be prop headerWidth",
          "status": "passed",
          "title": "placeholder has prop animation to be prop headerWidth",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card placeholder has prop animation to be default undefined",
          "status": "passed",
          "title": "placeholder has prop animation to be default undefined",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card placeholder has prop size to be prop headerWidth",
          "status": "passed",
          "title": "placeholder has prop size to be prop headerWidth",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card placeholder has prop size to be default md",
          "status": "passed",
          "title": "placeholder has prop size to be default md",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card slot header does not render when prop noHeader true",
          "status": "passed",
          "title": "slot header does not render when prop noHeader true",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card header placeholder does not render when prop noHeader true",
          "status": "passed",
          "title": "header placeholder does not render when prop noHeader true",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card card renders exactly five placeholders when no others are enabled",
          "status": "passed",
          "title": "card renders exactly five placeholders when no others are enabled",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card card first placeholder is given prop cols 7",
          "status": "passed",
          "title": "card first placeholder is given prop cols 7",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card card second placeholder is given prop cols 7",
          "status": "passed",
          "title": "card second placeholder is given prop cols 7",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card card third placeholder is given prop cols 7",
          "status": "passed",
          "title": "card third placeholder is given prop cols 7",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card card fourth placeholder is given prop cols 7",
          "status": "passed",
          "title": "card fourth placeholder is given prop cols 7",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card card fifth placeholder is given prop cols 7",
          "status": "passed",
          "title": "card fifth placeholder is given prop cols 7",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card does not have any placeholders when slot overridden and props disallow",
          "status": "passed",
          "title": "does not have any placeholders when slot overridden and props disallow",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card has BPlaceholderButton when prop noButton false",
          "status": "passed",
          "title": "has BPlaceholderButton when prop noButton false",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card has BPlaceholder when prop noButton true",
          "status": "passed",
          "title": "has BPlaceholder when prop noButton true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholder is given prop width to be 100 by default",
          "status": "passed",
          "title": "BPlaceholder is given prop width to be 100 by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholder is given prop width to be prop footerWidth",
          "status": "passed",
          "title": "BPlaceholder is given prop width to be prop footerWidth",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholder is given prop animation to be undefined by default",
          "status": "passed",
          "title": "BPlaceholder is given prop animation to be undefined by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholder is given prop animation to be prop footerAnimation",
          "status": "passed",
          "title": "BPlaceholder is given prop animation to be prop footerAnimation",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholder is given prop size to be md by default",
          "status": "passed",
          "title": "BPlaceholder is given prop size to be md by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholder is given prop size to be prop footerSize",
          "status": "passed",
          "title": "BPlaceholder is given prop size to be prop footerSize",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholder is given prop variant to be undefined by default",
          "status": "passed",
          "title": "BPlaceholder is given prop variant to be undefined by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholder is given prop variant to be prop footerVariant",
          "status": "passed",
          "title": "BPlaceholder is given prop variant to be prop footerVariant",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholderButton is given prop width to be 100 by default",
          "status": "passed",
          "title": "BPlaceholderButton is given prop width to be 100 by default",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholderButton is given prop width to be prop footerWidth",
          "status": "passed",
          "title": "BPlaceholderButton is given prop width to be prop footerWidth",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholderButton is given prop animation to be undefined by default",
          "status": "passed",
          "title": "BPlaceholderButton is given prop animation to be undefined by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholderButton is given prop animation to be prop footerAnimation",
          "status": "passed",
          "title": "BPlaceholderButton is given prop animation to be prop footerAnimation",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholderButton is given prop size to be undefined by default",
          "status": "passed",
          "title": "BPlaceholderButton is given prop size to be undefined by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholderButton is not given prop size to be footerSize",
          "status": "passed",
          "title": "BPlaceholderButton is not given prop size to be footerSize",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholderButton is given prop variant to be primary by default",
          "status": "passed",
          "title": "BPlaceholderButton is given prop variant to be primary by default",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card BPlaceholderButton is given prop variant to be prop footerVariant",
          "status": "passed",
          "title": "BPlaceholderButton is given prop variant to be prop footerVariant",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-card"
          ],
          "fullName": " placeholder-card renders all in correct order",
          "status": "passed",
          "title": "renders all in correct order",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908177012,
      "endTime": 1693908177527,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/placeholder-card.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table has BTableSimple",
          "status": "passed",
          "title": "has BTableSimple",
          "duration": 41,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table renders slot thead",
          "status": "passed",
          "title": "renders slot thead",
          "duration": 26,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table table has child thead",
          "status": "passed",
          "title": "table has child thead",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table renders slot thead if not prop hideHeader",
          "status": "passed",
          "title": "renders slot thead if not prop hideHeader",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table does not render slot thead if prop hideHeader",
          "status": "passed",
          "title": "does not render slot thead if prop hideHeader",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead does not exist if prop hideHeader",
          "status": "passed",
          "title": "child thead does not exist if prop hideHeader",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead has child tr",
          "status": "passed",
          "title": "child thead has child tr",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th when prop columns",
          "status": "passed",
          "title": "child thead child tr has child th when prop columns",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th when prop headerColumns",
          "status": "passed",
          "title": "child thead child tr has child th when prop headerColumns",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr does not have child th when prop headerColumns 0",
          "status": "passed",
          "title": "child thead child tr does not have child th when prop headerColumns 0",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr does not have child th when prop columns 0",
          "status": "failed",
          "title": "child thead child tr does not have child th when prop columns 0",
          "duration": 17,
          "failureMessages": [
            "expected true to be false // Object.is equality"
          ],
          "location": {
            "line": 107,
            "column": 26
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th has child BPlaceholder",
          "status": "passed",
          "title": "child thead child tr has child th has child BPlaceholder",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th child BPlaceholder has prop size to be prop headerSize",
          "status": "passed",
          "title": "child thead child tr has child th child BPlaceholder has prop size to be prop headerSize",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th child BPlaceholder has prop size to be undefined by default",
          "status": "failed",
          "title": "child thead child tr has child th child BPlaceholder has prop size to be undefined by default",
          "duration": 10,
          "failureMessages": [
            "expected 'md' to be undefined"
          ],
          "location": {
            "line": 143,
            "column": 40
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th child BPlaceholder has prop variant to be prop headerVariant",
          "status": "passed",
          "title": "child thead child tr has child th child BPlaceholder has prop variant to be prop headerVariant",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th child BPlaceholder has prop variant to be undefined by default",
          "status": "failed",
          "title": "child thead child tr has child th child BPlaceholder has prop variant to be undefined by default",
          "duration": 8,
          "failureMessages": [
            "expected null to be undefined"
          ],
          "location": {
            "line": 167,
            "column": 43
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th child BPlaceholder has prop animation to be prop headerAnimation",
          "status": "passed",
          "title": "child thead child tr has child th child BPlaceholder has prop animation to be prop headerAnimation",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th child BPlaceholder has prop animation to be undefined by default",
          "status": "passed",
          "title": "child thead child tr has child th child BPlaceholder has prop animation to be undefined by default",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th child BPlaceholder has prop width to be prop headerCellWidth",
          "status": "passed",
          "title": "child thead child tr has child th child BPlaceholder has prop width to be prop headerCellWidth",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr has child th child BPlaceholder has prop width to 100 by default",
          "status": "passed",
          "title": "child thead child tr has child th child BPlaceholder has prop width to 100 by default",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr children th length equal to the number of headerColumns when headerColumns is number",
          "status": "passed",
          "title": "child thead child tr children th length equal to the number of headerColumns when headerColumns is number",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr children th length equal to the number of headerColumns when headerColumns is string",
          "status": "passed",
          "title": "child thead child tr children th length equal to the number of headerColumns when headerColumns is string",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr children th length equal to the number of columns headerColumns is incorrect string",
          "status": "failed",
          "title": "child thead child tr children th length equal to the number of columns headerColumns is incorrect string",
          "duration": 4,
          "failureMessages": [
            "Invalid array length"
          ],
          "location": {
            "line": 182,
            "column": 19
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr children th length equal to the number of columns when prop headerColumns undefined",
          "status": "passed",
          "title": "child thead child tr children th length equal to the number of columns when prop headerColumns undefined",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child thead child tr children th length equal to the number of prop headerColumns over prop columns",
          "status": "passed",
          "title": "child thead child tr children th length equal to the number of prop headerColumns over prop columns",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table renders slot default",
          "status": "passed",
          "title": "renders slot default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table has child tbody",
          "status": "passed",
          "title": "has child tbody",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody has child tr by default",
          "status": "passed",
          "title": "child tbody has child tr by default",
          "duration": 18,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr has child td",
          "status": "passed",
          "title": "child tbody child tr has child td",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td has child BPlaceholder",
          "status": "passed",
          "title": "child tbody child tr child td has child BPlaceholder",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td child BPlaceholder has prop size to be undefined by default",
          "status": "failed",
          "title": "child tbody child tr child td child BPlaceholder has prop size to be undefined by default",
          "duration": 7,
          "failureMessages": [
            "expected 'md' to be undefined"
          ],
          "location": {
            "line": 333,
            "column": 40
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td child BPlaceholder has prop size to be prop size",
          "status": "passed",
          "title": "child tbody child tr child td child BPlaceholder has prop size to be prop size",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td child BPlaceholder has prop variant to be undefined by default",
          "status": "failed",
          "title": "child tbody child tr child td child BPlaceholder has prop variant to be undefined by default",
          "duration": 16,
          "failureMessages": [
            "expected null to be undefined"
          ],
          "location": {
            "line": 355,
            "column": 43
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td child BPlaceholder has prop variant to be prop variant",
          "status": "passed",
          "title": "child tbody child tr child td child BPlaceholder has prop variant to be prop variant",
          "duration": 27,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td child BPlaceholder has prop animation to be undefined by default",
          "status": "passed",
          "title": "child tbody child tr child td child BPlaceholder has prop animation to be undefined by default",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td child BPlaceholder has prop animation to be prop animation",
          "status": "passed",
          "title": "child tbody child tr child td child BPlaceholder has prop animation to be prop animation",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td child BPlaceholder has prop width to be default 100",
          "status": "passed",
          "title": "child tbody child tr child td child BPlaceholder has prop width to be default 100",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr child td child BPlaceholder has prop width to be prop cellWidth",
          "status": "passed",
          "title": "child tbody child tr child td child BPlaceholder has prop width to be prop cellWidth",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr children td length equal to the number of prop columns when is number",
          "status": "passed",
          "title": "child tbody child tr children td length equal to the number of prop columns when is number",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr children td length equal to the number of prop columns when is string",
          "status": "passed",
          "title": "child tbody child tr children td length equal to the number of prop columns when is string",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody child tr children td length equal to 5 when prop columns is incorrect string",
          "status": "passed",
          "title": "child tbody child tr children td length equal to 5 when prop columns is incorrect string",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody children tr length equal to the number of prop rows when is number",
          "status": "passed",
          "title": "child tbody children tr length equal to the number of prop rows when is number",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody children tr length equal to the number of prop rows when is string",
          "status": "passed",
          "title": "child tbody children tr length equal to the number of prop rows when is string",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tbody children tr length equal to 3 when prop rows is incorrect string",
          "status": "passed",
          "title": "child tbody children tr length equal to 3 when prop rows is incorrect string",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table renders slot tfoot when prop showFooter",
          "status": "passed",
          "title": "renders slot tfoot when prop showFooter",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table does not render slot tfoot when not prop showFooter",
          "status": "passed",
          "title": "does not render slot tfoot when not prop showFooter",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table does not have tfoot by default",
          "status": "passed",
          "title": "does not have tfoot by default",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table has tfoot when prop showFooter",
          "status": "passed",
          "title": "has tfoot when prop showFooter",
          "duration": 20,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table tfoot has child tr",
          "status": "passed",
          "title": "tfoot has child tr",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr has child th",
          "status": "passed",
          "title": "child tfoot child tr has child th",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th has child BPlaceholder",
          "status": "passed",
          "title": "child tfoot child tr child th has child BPlaceholder",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot children tr length equal to the number of footerColumns when footerColumns is number",
          "status": "passed",
          "title": "child tfoot children tr length equal to the number of footerColumns when footerColumns is number",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot children tr length equal to the number of footerColumns when footerColumns is string",
          "status": "passed",
          "title": "child tfoot children tr length equal to the number of footerColumns when footerColumns is string",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot children tr length equal to the number of footerColumns when footerColumns is incorrect string",
          "status": "failed",
          "title": "child tfoot children tr length equal to the number of footerColumns when footerColumns is incorrect string",
          "duration": 3,
          "failureMessages": [
            "Invalid array length"
          ],
          "location": {
            "line": 182,
            "column": 19
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot children tr length equal to the number of columns when prop footerColumns undefined",
          "status": "passed",
          "title": "child tfoot children tr length equal to the number of columns when prop footerColumns undefined",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot children tr length equal to the number of prop footerColumns over prop columns",
          "status": "passed",
          "title": "child tfoot children tr length equal to the number of prop footerColumns over prop columns",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th child BPlaceholder has prop size to be prop footerSize",
          "status": "passed",
          "title": "child tfoot child tr child th child BPlaceholder has prop size to be prop footerSize",
          "duration": 21,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th child BPlaceholder has prop size to be undefined by default",
          "status": "failed",
          "title": "child tfoot child tr child th child BPlaceholder has prop size to be undefined by default",
          "duration": 29,
          "failureMessages": [
            "expected 'md' to be undefined"
          ],
          "location": {
            "line": 645,
            "column": 40
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th child BPlaceholder has prop variant to be prop footerVariant",
          "status": "passed",
          "title": "child tfoot child tr child th child BPlaceholder has prop variant to be prop footerVariant",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th child BPlaceholder has prop variant to be undefined by default",
          "status": "failed",
          "title": "child tfoot child tr child th child BPlaceholder has prop variant to be undefined by default",
          "duration": 44,
          "failureMessages": [
            "expected null to be undefined"
          ],
          "location": {
            "line": 669,
            "column": 43
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th child BPlaceholder has prop animation to be prop footerAnimation",
          "status": "passed",
          "title": "child tfoot child tr child th child BPlaceholder has prop animation to be prop footerAnimation",
          "duration": 20,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th child BPlaceholder has prop animation to be undefined by default",
          "status": "passed",
          "title": "child tfoot child tr child th child BPlaceholder has prop animation to be undefined by default",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th child BPlaceholder has prop width to be prop footerCellWidth",
          "status": "passed",
          "title": "child tfoot child tr child th child BPlaceholder has prop width to be prop footerCellWidth",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table child tfoot child tr child th child BPlaceholder has prop width to be 100 by default",
          "status": "passed",
          "title": "child tfoot child tr child th child BPlaceholder has prop width to be 100 by default",
          "duration": 19,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-table"
          ],
          "fullName": " placeholder-table renders all in correct order",
          "status": "passed",
          "title": "renders all in correct order",
          "duration": 14,
          "failureMessages": []
        }
      ],
      "startTime": 1693908171776,
      "endTime": 1693908172569,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/placeholder-table.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "placeholder-wrapper"
          ],
          "fullName": " placeholder-wrapper renders slot default by default",
          "status": "passed",
          "title": "renders slot default by default",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-wrapper"
          ],
          "fullName": " placeholder-wrapper renders slot default when prop loading false",
          "status": "passed",
          "title": "renders slot default when prop loading false",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder-wrapper"
          ],
          "fullName": " placeholder-wrapper renders slot loading when prop loading true",
          "status": "passed",
          "title": "renders slot loading when prop loading true",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908193096,
      "endTime": 1693908193120,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/placeholder-wrapper.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder tag is span by default",
          "status": "passed",
          "title": "tag is span by default",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder tag is prop tag",
          "status": "failed",
          "title": "tag is prop tag",
          "duration": 11,
          "failureMessages": [
            "expected 'SPAN' to be 'DIV' // Object.is equality"
          ],
          "location": {
            "line": 17,
            "column": 37
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has static class placeholder",
          "status": "failed",
          "title": "has static class placeholder",
          "duration": 8,
          "failureMessages": [
            "expected [] to include 'placeholder'"
          ],
          "location": {
            "line": 22,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has class col-{type} when prop cols is number",
          "status": "failed",
          "title": "has class col-{type} when prop cols is number",
          "duration": 2,
          "failureMessages": [
            "expected [] to include 'col-6'"
          ],
          "location": {
            "line": 29,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has class col-{type} when prop cols is string",
          "status": "failed",
          "title": "has class col-{type} when prop cols is string",
          "duration": 3,
          "failureMessages": [
            "expected [] to include 'col-6'"
          ],
          "location": {
            "line": 38,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has style width: {type}%; when prop width is number",
          "status": "failed",
          "title": "has style width: {type}%; when prop width is number",
          "duration": 4,
          "failureMessages": [
            "the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"
          ],
          "location": {
            "line": 45,
            "column": 41
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has style width: {type}%; when prop width is string",
          "status": "failed",
          "title": "has style width: {type}%; when prop width is string",
          "duration": 4,
          "failureMessages": [
            "the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"
          ],
          "location": {
            "line": 54,
            "column": 41
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has style width: {type}%; when prop width is string and contains %",
          "status": "failed",
          "title": "has style width: {type}%; when prop width is string and contains %",
          "duration": 4,
          "failureMessages": [
            "the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"
          ],
          "location": {
            "line": 61,
            "column": 41
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has class bg-{type} when prop variant",
          "status": "failed",
          "title": "has class bg-{type} when prop variant",
          "duration": 5,
          "failureMessages": [
            "expected [] to include 'bg-info'"
          ],
          "location": {
            "line": 68,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has class placeholder-{type} when prop size",
          "status": "failed",
          "title": "has class placeholder-{type} when prop size",
          "duration": 6,
          "failureMessages": [
            "expected [] to include 'placeholder-lg'"
          ],
          "location": {
            "line": 77,
            "column": 31
          }
        },
        {
          "ancestorTitles": [
            "",
            "placeholder"
          ],
          "fullName": " placeholder has class placeholder-{type} when prop animation",
          "status": "passed",
          "title": "has class placeholder-{type} when prop animation",
          "duration": 8,
          "failureMessages": []
        }
      ],
      "startTime": 1693908174756,
      "endTime": 1693908174826,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/placeholder.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover has div.popover",
          "status": "passed",
          "title": "has div.popover",
          "duration": 40,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover has static class popover",
          "status": "passed",
          "title": "has static class popover",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover has static class b-popover",
          "status": "passed",
          "title": "has static class b-popover",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover has role tooltip",
          "status": "passed",
          "title": "has role tooltip",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover has tabindex -1",
          "status": "passed",
          "title": "has tabindex -1",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover is tag div",
          "status": "passed",
          "title": "is tag div",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover has prop id",
          "status": "passed",
          "title": "has prop id",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover first child contains slot title",
          "status": "passed",
          "title": "first child contains slot title",
          "duration": 22,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover first child contains prop title",
          "status": "passed",
          "title": "first child contains prop title",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover first child contains slot title if both slot and prop exists",
          "status": "passed",
          "title": "first child contains slot title if both slot and prop exists",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover contains slot default",
          "status": "passed",
          "title": "contains slot default",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover second child contains prop content",
          "status": "passed",
          "title": "second child contains prop content",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover contains slot default if both slot and prop exists",
          "status": "passed",
          "title": "contains slot default if both slot and prop exists",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "popover"
          ],
          "fullName": " popover contains b-popover-{type} if prop variant",
          "status": "passed",
          "title": "contains b-popover-{type} if prop variant",
          "duration": 11,
          "failureMessages": []
        }
      ],
      "startTime": 1693908180746,
      "endTime": 1693908180935,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/popover.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress has static class progress",
          "status": "passed",
          "title": "has static class progress",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress has style to be prop height",
          "status": "passed",
          "title": "has style to be prop height",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress has BProgressBar in slot by default",
          "status": "passed",
          "title": "has BProgressBar in slot by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress does not have BProgressBar when default slot",
          "status": "passed",
          "title": "does not have BProgressBar when default slot",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress BProgressBar has prop animated to be prop animated",
          "status": "passed",
          "title": "BProgressBar has prop animated to be prop animated",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress BProgressBar has prop max to be prop max",
          "status": "passed",
          "title": "BProgressBar has prop max to be prop max",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress BProgressBar has prop precision to be prop precision",
          "status": "passed",
          "title": "BProgressBar has prop precision to be prop precision",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress BProgressBar has prop showProgress to be prop showProgress",
          "status": "passed",
          "title": "BProgressBar has prop showProgress to be prop showProgress",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress BProgressBar has prop showValue to be prop showValue",
          "status": "passed",
          "title": "BProgressBar has prop showValue to be prop showValue",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress BProgressBar has prop striped to be prop striped",
          "status": "passed",
          "title": "BProgressBar has prop striped to be prop striped",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress BProgressBar has prop value to be prop value",
          "status": "passed",
          "title": "BProgressBar has prop value to be prop value",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "progress"
          ],
          "fullName": " progress BProgressBar has prop variant to be prop variant",
          "status": "passed",
          "title": "BProgressBar has prop variant to be prop variant",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908185486,
      "endTime": 1693908185564,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/progress.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row has static class row",
          "status": "passed",
          "title": "has static class row",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row tag is div by default",
          "status": "passed",
          "title": "tag is div by default",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row has class gx-{type} when prop gutterX",
          "status": "passed",
          "title": "has class gx-{type} when prop gutterX",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row has class gx-{type} when prop gutterY",
          "status": "passed",
          "title": "has class gx-{type} when prop gutterY",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row has class align-items-{type} when prop alignV",
          "status": "passed",
          "title": "has class align-items-{type} when prop alignV",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row has class justify-content-{type} when prop alignH",
          "status": "passed",
          "title": "has class justify-content-{type} when prop alignH",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row has class align-content-{type} when prop alignContent",
          "status": "passed",
          "title": "has class align-content-{type} when prop alignContent",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "row"
          ],
          "fullName": " row has class g-0 when prop noGutters",
          "status": "passed",
          "title": "has class g-0 when prop noGutters",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908194542,
      "endTime": 1693908194574,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/row.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner tag is span by default",
          "status": "passed",
          "title": "tag is span by default",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner tag is tag prop",
          "status": "passed",
          "title": "tag is tag prop",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has class spinner-border when prop type is border",
          "status": "passed",
          "title": "has class spinner-border when prop type is border",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has class spinner-border-sm when both prop type border and prop small",
          "status": "passed",
          "title": "has class spinner-border-sm when both prop type border and prop small",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has class spinner-grow when prop type is grow",
          "status": "passed",
          "title": "has class spinner-grow when prop type is grow",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has class spinner-grow-sm when prop type is grow and prop small",
          "status": "passed",
          "title": "has class spinner-grow-sm when prop type is grow and prop small",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has class spinner-grow when prop type is grow",
          "status": "passed",
          "title": "has class spinner-grow when prop type is grow",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has class text-{type} when prop variant",
          "status": "passed",
          "title": "has class text-{type} when prop variant",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner does not have role when prop role, but has no label",
          "status": "passed",
          "title": "does not have role when prop role, but has no label",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has role when prop role but also has prop label",
          "status": "passed",
          "title": "has role when prop role but also has prop label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has role when prop role but also has slot label",
          "status": "passed",
          "title": "has role when prop role but also has slot label",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has role status by default when label exists",
          "status": "passed",
          "title": "has role status by default when label exists",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has aria-hidden undefined when prop label",
          "status": "passed",
          "title": "has aria-hidden undefined when prop label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has aria-hidden undefined when slot label",
          "status": "passed",
          "title": "has aria-hidden undefined when slot label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has aria-hidden true when no label",
          "status": "passed",
          "title": "has aria-hidden true when no label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner does not have span child if no label",
          "status": "passed",
          "title": "does not have span child if no label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has span child if prop label",
          "status": "passed",
          "title": "has span child if prop label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner has span child if prop label",
          "status": "passed",
          "title": "has span child if prop label",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner span child has text for slot label",
          "status": "passed",
          "title": "span child has text for slot label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner span child has text for prop label",
          "status": "passed",
          "title": "span child has text for prop label",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner prioritizes slot label over prop label if both exist",
          "status": "passed",
          "title": "prioritizes slot label over prop label if both exist",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "spinner"
          ],
          "fullName": " spinner span child when has label has static class visually-hidden",
          "status": "passed",
          "title": "span child when has label has static class visually-hidden",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908181630,
      "endTime": 1693908181704,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/spinner.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab tag is default div",
          "status": "passed",
          "title": "tag is default div",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab id is prop id",
          "status": "passed",
          "title": "id is prop id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab has static class tab-pane",
          "status": "passed",
          "title": "has static class tab-pane",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab has static role tabpanel",
          "status": "passed",
          "title": "has static role tabpanel",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab has static aria-abelledby profile-tab",
          "status": "passed",
          "title": "has static aria-abelledby profile-tab",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab has class active when prop active",
          "status": "passed",
          "title": "has class active when prop active",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab has class show when prop active",
          "status": "failed",
          "title": "has class show when prop active",
          "duration": 10,
          "failureMessages": [
            "expected [ 'tab-pane', 'show' ] to not include 'show'"
          ],
          "location": {
            "line": 59,
            "column": 35
          }
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab has class card-body when parentData card and prop noBody false",
          "status": "failed",
          "title": "has class card-body when parentData card and prop noBody false",
          "duration": 8,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 1640,
            "column": 10
          }
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not have class card-body when parentData card but prop noBody true",
          "status": "failed",
          "title": "does not have class card-body when parentData card but prop noBody true",
          "duration": 3,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 1640,
            "column": 10
          }
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not have class card-body when parentData card false and prop noBody false",
          "status": "failed",
          "title": "does not have class card-body when parentData card false and prop noBody false",
          "duration": 3,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 1640,
            "column": 10
          }
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not have class card-body when parentData card false and prop noBody true",
          "status": "failed",
          "title": "does not have class card-body when parentData card false and prop noBody true",
          "duration": 2,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 1640,
            "column": 10
          }
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not render default slot if lazy true",
          "status": "passed",
          "title": "does not render default slot if lazy true",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not render default slot if parentData lazy true",
          "status": "passed",
          "title": "does not render default slot if parentData lazy true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not render default slot parentData lazy and prop lazy true",
          "status": "passed",
          "title": "does not render default slot parentData lazy and prop lazy true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not render default slot parentData lazy false and prop lazy true",
          "status": "passed",
          "title": "does not render default slot parentData lazy false and prop lazy true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not render default slot parentData lazy and prop lazy false",
          "status": "passed",
          "title": "does not render default slot parentData lazy and prop lazy false",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab renders slot if prop active",
          "status": "passed",
          "title": "renders slot if prop active",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not render slot if not prop active but prop lazy true",
          "status": "passed",
          "title": "does not render slot if not prop active but prop lazy true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not render slot if prop active but not prop disabled and prop lazy true",
          "status": "passed",
          "title": "does not render slot if prop active but not prop disabled and prop lazy true",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab does not render slot if prop active but not prop disabled and parentData lazy true",
          "status": "passed",
          "title": "does not render slot if prop active but not prop disabled and parentData lazy true",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tab"
          ],
          "fullName": " tab renders if prop active and not prop boolean, but has lazyOnce true",
          "status": "passed",
          "title": "renders if prop active and not prop boolean, but has lazyOnce true",
          "duration": 7,
          "failureMessages": []
        }
      ],
      "startTime": 1693908174708,
      "endTime": 1693908174807,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/tab.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table element is BTableSimple",
          "status": "passed",
          "title": "element is BTableSimple",
          "duration": 25,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop bordered",
          "status": "passed",
          "title": "tablesimple is given prop bordered",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop borderless",
          "status": "passed",
          "title": "tablesimple is given prop borderless",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop borderVariant",
          "status": "passed",
          "title": "tablesimple is given prop borderVariant",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop captionTop",
          "status": "passed",
          "title": "tablesimple is given prop captionTop",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop hover",
          "status": "passed",
          "title": "tablesimple is given prop hover",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop responsive",
          "status": "passed",
          "title": "tablesimple is given prop responsive",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop striped",
          "status": "passed",
          "title": "tablesimple is given prop striped",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop small",
          "status": "passed",
          "title": "tablesimple is given prop small",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop tableVariant as prop variant",
          "status": "passed",
          "title": "tablesimple is given prop tableVariant as prop variant",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop stickyHeader",
          "status": "passed",
          "title": "tablesimple is given prop stickyHeader",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table tablesimple is given prop responsive",
          "status": "passed",
          "title": "tablesimple is given prop responsive",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has child thead",
          "status": "passed",
          "title": "has child thead",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead child has tr child",
          "status": "passed",
          "title": "thead child has tr child",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead renders slot thead-top",
          "status": "passed",
          "title": "thead renders slot thead-top",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead renders slot select-head when prop selectable true",
          "status": "passed",
          "title": "thead renders slot select-head when prop selectable true",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead renders prop selectHead when prop selectable string",
          "status": "passed",
          "title": "thead renders prop selectHead when prop selectable string",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead renders prop selectHead when prop selectable bool",
          "status": "passed",
          "title": "thead renders prop selectHead when prop selectable bool",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead does not render prop selectHead when prop selectable false",
          "status": "passed",
          "title": "thead does not render prop selectHead when prop selectable false",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead renders slot select-head over prop selectHead",
          "status": "passed",
          "title": "thead renders slot select-head over prop selectHead",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead does not render slot selectHead or prop selectHead when selectable false",
          "status": "passed",
          "title": "thead does not render slot selectHead or prop selectHead when selectable false",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead tr child does not have th child by default",
          "status": "passed",
          "title": "thead tr child does not have th child by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead tr child has th child when prop selectable",
          "status": "passed",
          "title": "thead tr child has th child when prop selectable",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead tr child has th child when prop selectable and prop selectHead",
          "status": "passed",
          "title": "thead tr child has th child when prop selectable and prop selectHead",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead tr child has th child when prop selectable and slot selectHead",
          "status": "passed",
          "title": "thead tr child has th child when prop selectable and slot selectHead",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead tr child does not have th child when not prop selectable and prop selectHead",
          "status": "passed",
          "title": "thead tr child does not have th child when not prop selectable and prop selectHead",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead tr child does not have th child when not prop selectable and slot selectHead",
          "status": "passed",
          "title": "thead tr child does not have th child when not prop selectable and slot selectHead",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead tr child has th child has class b-table-selection-column",
          "status": "passed",
          "title": "thead tr child has th child has class b-table-selection-column",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table thead tr child has th child has class b-table-sticky-column when prop stickySelect",
          "status": "passed",
          "title": "thead tr child has th child has class b-table-sticky-column when prop stickySelect",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has th when items and fields props",
          "status": "passed",
          "title": "has th when items and fields props",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th has attr scope to be col",
          "status": "passed",
          "title": "th has attr scope to be col",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th has attr title to be headerTitle from TableField headerTitle",
          "status": "passed",
          "title": "th has attr title to be headerTitle from TableField headerTitle",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th has attr abbr to be headerAbbr from TableField in props fields",
          "status": "passed",
          "title": "th has attr abbr to be headerAbbr from TableField in props fields",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th has attr style to be thStyle from TableField in props fields",
          "status": "passed",
          "title": "th has attr style to be thStyle from TableField in props fields",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th classes from class field in TableField from prop fields",
          "status": "passed",
          "title": "th classes from class field in TableField from prop fields",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th classes from thClass field in TableField from prop fields",
          "status": "passed",
          "title": "th classes from thClass field in TableField from prop fields",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th has class table-{type} variant field in TableField from prop fields",
          "status": "passed",
          "title": "th has class table-{type} variant field in TableField from prop fields",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th has class b-table-sticky-column from field stickyColumn in TableField from prop fields",
          "status": "passed",
          "title": "th has class b-table-sticky-column from field stickyColumn in TableField from prop fields",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table emits head-clicked event when head is clicked",
          "status": "passed",
          "title": "emits head-clicked event when head is clicked",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table first item in head-clicked is name",
          "status": "passed",
          "title": "first item in head-clicked is name",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table second item in head-clicked is {key: 'name'}",
          "status": "passed",
          "title": "second item in head-clicked is {key: 'name'}",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table third item is instanceOf MouseEvent",
          "status": "passed",
          "title": "third item is instanceOf MouseEvent",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table fourth item is always false for this header",
          "status": "passed",
          "title": "fourth item is always false for this header",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has fields when fields prop is labeled",
          "status": "passed",
          "title": "has fields when fields prop is labeled",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has fields when fields prop not labeled",
          "status": "passed",
          "title": "has fields when fields prop not labeled",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has fields when fields prop is array of strings",
          "status": "passed",
          "title": "has fields when fields prop is array of strings",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has items when fields prop is array of strings",
          "status": "passed",
          "title": "has items when fields prop is array of strings",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has items when fields prop is an object",
          "status": "passed",
          "title": "has items when fields prop is an object",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has added tbody > tr classes given by tbodyTrClass prop ",
          "status": "passed",
          "title": "has added tbody > tr classes given by tbodyTrClass prop ",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has accepts a formatter function",
          "status": "passed",
          "title": "has accepts a formatter function",
          "duration": 15,
          "failureMessages": []
        }
      ],
      "startTime": 1693908176953,
      "endTime": 1693908177287,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/table-lite.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple tag is table by default",
          "status": "passed",
          "title": "tag is table by default",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple has element table by default",
          "status": "passed",
          "title": "has element table by default",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table renders default slot",
          "status": "passed",
          "title": "table renders default slot",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has static class table",
          "status": "passed",
          "title": "table has static class table",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has static class b-table",
          "status": "passed",
          "title": "table has static class b-table",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class prop tableClass",
          "status": "passed",
          "title": "table has class prop tableClass",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class table-bordered when prop bordered",
          "status": "passed",
          "title": "table has class table-bordered when prop bordered",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class table-borderless when prop borderless",
          "status": "passed",
          "title": "table has class table-borderless when prop borderless",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class border-{type} when prop borderVariant",
          "status": "passed",
          "title": "table has class border-{type} when prop borderVariant",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class caption-top when prop captionTop",
          "status": "passed",
          "title": "table has class caption-top when prop captionTop",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class table-hover when prop hover",
          "status": "passed",
          "title": "table has class table-hover when prop hover",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class b-table-stacked when prop stacked is boolean",
          "status": "passed",
          "title": "table has class b-table-stacked when prop stacked is boolean",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class b-table-stacked-{type} when prop stacked is string",
          "status": "passed",
          "title": "table has class b-table-stacked-{type} when prop stacked is string",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class table-striped when prop striped",
          "status": "passed",
          "title": "table has class table-striped when prop striped",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class table-sm when prop small",
          "status": "passed",
          "title": "table has class table-sm when prop small",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table has class table-{type} when prop tableVariant",
          "status": "passed",
          "title": "table has class table-{type} when prop tableVariant",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple tag is div when prop responsive",
          "status": "passed",
          "title": "tag is div when prop responsive",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple has element div when prop responsive",
          "status": "passed",
          "title": "has element div when prop responsive",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple div has class table-responsive when prop responsive is true",
          "status": "passed",
          "title": "div has class table-responsive when prop responsive is true",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple div has class table-responsive-xxl when prop responsive is string xxl",
          "status": "passed",
          "title": "div has class table-responsive-xxl when prop responsive is string xxl",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple div has class b-table-sticky-header when prop stickyHeader",
          "status": "passed",
          "title": "div has class b-table-sticky-header when prop stickyHeader",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple div has child table",
          "status": "passed",
          "title": "div has child table",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple table renders default slot when prop responsive",
          "status": "passed",
          "title": "table renders default slot when prop responsive",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has static class table",
          "status": "failed",
          "title": "when prop responsive table has static class table",
          "duration": 9,
          "failureMessages": [
            "expected [] to include 'table'"
          ],
          "location": {
            "line": 217,
            "column": 30
          }
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has static class b-table",
          "status": "failed",
          "title": "when prop responsive table has static class b-table",
          "duration": 1,
          "failureMessages": [
            "expected [] to include 'b-table'"
          ],
          "location": {
            "line": 226,
            "column": 30
          }
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class prop tableClass",
          "status": "passed",
          "title": "when prop responsive table has class prop tableClass",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class table-bordered when prop bordered",
          "status": "passed",
          "title": "when prop responsive table has class table-bordered when prop bordered",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class table-borderless when prop borderless",
          "status": "passed",
          "title": "when prop responsive table has class table-borderless when prop borderless",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class border-{type} when prop borderVariant",
          "status": "passed",
          "title": "when prop responsive table has class border-{type} when prop borderVariant",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class caption-top when prop captionTop",
          "status": "passed",
          "title": "when prop responsive table has class caption-top when prop captionTop",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class table-hover when prop hover",
          "status": "passed",
          "title": "when prop responsive table has class table-hover when prop hover",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class b-table-stacked when prop stacked is boolean",
          "status": "passed",
          "title": "when prop responsive table has class b-table-stacked when prop stacked is boolean",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class b-table-stacked-{type} when prop stacked is string",
          "status": "passed",
          "title": "when prop responsive table has class b-table-stacked-{type} when prop stacked is string",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class table-striped when prop striped",
          "status": "passed",
          "title": "when prop responsive table has class table-striped when prop striped",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class table-sm when prop small",
          "status": "passed",
          "title": "when prop responsive table has class table-sm when prop small",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple when prop responsive table has class table-{type} when prop tableVariant",
          "status": "passed",
          "title": "when prop responsive table has class table-{type} when prop tableVariant",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "table-simple"
          ],
          "fullName": " table-simple does not have div when by default",
          "status": "passed",
          "title": "does not have div when by default",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1693908174196,
      "endTime": 1693908174305,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/table-simple.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th has class b-table-sortable-column from field sortable in TableField from prop fields",
          "status": "failed",
          "title": "th has class b-table-sortable-column from field sortable in TableField from prop fields",
          "duration": 19,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 477,
            "column": 6
          }
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table th does not have class b-table-sortable-column from field sortable in TableField from prop fields but field is not sortable",
          "status": "failed",
          "title": "th does not have class b-table-sortable-column from field sortable in TableField from prop fields but field is not sortable",
          "duration": 6,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 477,
            "column": 6
          }
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has items when using a provider function",
          "status": "failed",
          "title": "has items when using a provider function",
          "duration": 18,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 812,
            "column": 16
          }
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has items when using a provider promise",
          "status": "failed",
          "title": "has items when using a provider promise",
          "duration": 11,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 812,
            "column": 16
          }
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has items when using a provider callback",
          "status": "failed",
          "title": "has items when using a provider callback",
          "duration": 4,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 812,
            "column": 16
          }
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has sorted items when sortBy prop is passed",
          "status": "failed",
          "title": "has sorted items when sortBy prop is passed",
          "duration": 3,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 477,
            "column": 6
          }
        },
        {
          "ancestorTitles": [
            "",
            "table"
          ],
          "fullName": " table has desc sorted items when sortDesc prop is true",
          "status": "failed",
          "title": "has desc sorted items when sortDesc prop is true",
          "duration": 2,
          "failureMessages": [
            "Cannot read properties of undefined (reading 'value')"
          ],
          "location": {
            "line": 477,
            "column": 6
          }
        }
      ],
      "startTime": 1693908176245,
      "endTime": 1693908176308,
      "status": "failed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/table.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs tag is default div",
          "status": "passed",
          "title": "tag is default div",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs tag is prop tag",
          "status": "passed",
          "title": "tag is prop tag",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs attr id is undefined by default",
          "status": "passed",
          "title": "attr id is undefined by default",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs attr id is prop id",
          "status": "passed",
          "title": "attr id is prop id",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs has static class tabs",
          "status": "passed",
          "title": "has static class tabs",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs has class d-flex if prop vertical",
          "status": "passed",
          "title": "has class d-flex if prop vertical",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs has class align-items-start if prop vertical",
          "status": "passed",
          "title": "has class align-items-start if prop vertical",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs has first child div when prop end",
          "status": "passed",
          "title": "has first child div when prop end",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div has static class tab-content",
          "status": "passed",
          "title": "first child div has static class tab-content",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div has classes from prop contentClass",
          "status": "passed",
          "title": "first child div has classes from prop contentClass",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div has another div child when tabs empty",
          "status": "passed",
          "title": "first child div has another div child when tabs empty",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div nested div child has static class tab-pane",
          "status": "passed",
          "title": "first child div nested div child has static class tab-pane",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div nested div child has static class active",
          "status": "passed",
          "title": "first child div nested div child has static class active",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div nested div child class card-body when prop card",
          "status": "passed",
          "title": "first child div nested div child class card-body when prop card",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div nested div child renders slot empty",
          "status": "passed",
          "title": "first child div nested div child renders slot empty",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div has tab component when default slot",
          "status": "passed",
          "title": "first child div has tab component when default slot",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div does not have child div when default slot has tab",
          "status": "passed",
          "title": "first child div does not have child div when default slot has tab",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs first child div is next div if not prop end",
          "status": "passed",
          "title": "first child div is next div if not prop end",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div has class card-header if prop card",
          "status": "passed",
          "title": "next div has class card-header if prop card",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div has class ms-auto when prop vertical and prop end",
          "status": "passed",
          "title": "next div has class ms-auto when prop vertical and prop end",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div has classes from prop navWrapperClass",
          "status": "passed",
          "title": "next div has classes from prop navWrapperClass",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div has child ul",
          "status": "passed",
          "title": "next div has child ul",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has static class nav",
          "status": "passed",
          "title": "next div child ul has static class nav",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class from prop navClass",
          "status": "passed",
          "title": "next div child ul has class from prop navClass",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has static attr tablist",
          "status": "passed",
          "title": "next div child ul has static attr tablist",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class nav-pills when prop pills",
          "status": "passed",
          "title": "next div child ul has class nav-pills when prop pills",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class flex-column when prop vertical",
          "status": "passed",
          "title": "next div child ul has class flex-column when prop vertical",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class me-3 when prop vertical",
          "status": "passed",
          "title": "next div child ul has class me-3 when prop vertical",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class justify-content-{type} when prop align",
          "status": "passed",
          "title": "next div child ul has class justify-content-{type} when prop align",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class nav-fill when prop fill",
          "status": "passed",
          "title": "next div child ul has class nav-fill when prop fill",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class card-header-tabs when prop card",
          "status": "passed",
          "title": "next div child ul has class card-header-tabs when prop card",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class nav-justified when prop justified",
          "status": "passed",
          "title": "next div child ul has class nav-justified when prop justified",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class small when prop small",
          "status": "passed",
          "title": "next div child ul has class small when prop small",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul has class nav-tabs when not prop noNavStyle and not prop pills",
          "status": "passed",
          "title": "next div child ul has class nav-tabs when not prop noNavStyle and not prop pills",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs next div child ul renders slot tabs-start",
          "status": "passed",
          "title": "next div child ul renders slot tabs-start",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs second child div is end div",
          "status": "passed",
          "title": "second child div is end div",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div has static class tab-content",
          "status": "passed",
          "title": "end div has static class tab-content",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div has classes from prop contentClass",
          "status": "passed",
          "title": "end div has classes from prop contentClass",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div has another div child when tabs empty",
          "status": "passed",
          "title": "end div has another div child when tabs empty",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div nested div child has static class tab-pane",
          "status": "passed",
          "title": "end div nested div child has static class tab-pane",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div nested div child has static class active",
          "status": "passed",
          "title": "end div nested div child has static class active",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div nested div child class card-body when prop card",
          "status": "passed",
          "title": "end div nested div child class card-body when prop card",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div nested div child renders slot empty",
          "status": "passed",
          "title": "end div nested div child renders slot empty",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div has tab component when default slot",
          "status": "passed",
          "title": "end div has tab component when default slot",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs end div does not have child div when default slot has tab",
          "status": "passed",
          "title": "end div does not have child div when default slot has tab",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs renders in correct order when prop end",
          "status": "passed",
          "title": "renders in correct order when prop end",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs renders in correct order when not prop end",
          "status": "passed",
          "title": "renders in correct order when not prop end",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tabs"
          ],
          "fullName": " tabs renders content passed via ",
          "status": "passed",
          "title": "renders content passed via ",
          "duration": 28,
          "failureMessages": []
        }
      ],
      "startTime": 1693908179432,
      "endTime": 1693908179699,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/tabs.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "tbody"
          ],
          "fullName": " tbody renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tbody"
          ],
          "fullName": " tbody has class thead-{type} when prop variant",
          "status": "passed",
          "title": "has class thead-{type} when prop variant",
          "duration": 6,
          "failureMessages": []
        }
      ],
      "startTime": 1693908198349,
      "endTime": 1693908198368,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/tbody.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has colspan to be prop colspan",
          "status": "passed",
          "title": "has colspan to be prop colspan",
          "duration": 19,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has rowspan to be prop rowspan",
          "status": "passed",
          "title": "has rowspan to be prop rowspan",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has data-label to be prop stackedHeading",
          "status": "passed",
          "title": "has data-label to be prop stackedHeading",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has class table-{type} when prop variant",
          "status": "passed",
          "title": "has class table-{type} when prop variant",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has class b-table-sticky-column when prop stickyColumn",
          "status": "passed",
          "title": "has class b-table-sticky-column when prop stickyColumn",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has class table-b-table-default when prop stickyColumn",
          "status": "passed",
          "title": "has class table-b-table-default when prop stickyColumn",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td does not have class table-b-table-default when prop stickyColumn but also props variant",
          "status": "passed",
          "title": "does not have class table-b-table-default when prop stickyColumn but also props variant",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has attr scope to be colspan when prop colspan",
          "status": "passed",
          "title": "has attr scope to be colspan when prop colspan",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has attr scope to be rowspan when prop rowspan",
          "status": "passed",
          "title": "has attr scope to be rowspan when prop rowspan",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has attr scope to be col by default",
          "status": "passed",
          "title": "has attr scope to be col by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has scope colspan when both rowspan and colspan",
          "status": "passed",
          "title": "has scope colspan when both rowspan and colspan",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td does not have a nested div by default when stackedHeading is undefined",
          "status": "passed",
          "title": "does not have a nested div by default when stackedHeading is undefined",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td has a nested div when stackedHeading is defined",
          "status": "passed",
          "title": "has a nested div when stackedHeading is defined",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "td"
          ],
          "fullName": " td nested div when stackedHeading is defined contains default slot",
          "status": "passed",
          "title": "nested div when stackedHeading is defined contains default slot",
          "duration": 11,
          "failureMessages": []
        }
      ],
      "startTime": 1693908187614,
      "endTime": 1693908187690,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/td.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "tfoot"
          ],
          "fullName": " tfoot renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tfoot"
          ],
          "fullName": " tfoot has class table-{type} when prop variant",
          "status": "passed",
          "title": "has class table-{type} when prop variant",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1693908198712,
      "endTime": 1693908198728,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/tfoot.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has colspan to be prop colspan",
          "status": "passed",
          "title": "has colspan to be prop colspan",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has rowspan to be prop rowspan",
          "status": "passed",
          "title": "has rowspan to be prop rowspan",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has data-label to be prop stackedHeading",
          "status": "passed",
          "title": "has data-label to be prop stackedHeading",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has class table-{type} when prop variant",
          "status": "passed",
          "title": "has class table-{type} when prop variant",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has class b-table-sticky-column when prop stickyColumn",
          "status": "passed",
          "title": "has class b-table-sticky-column when prop stickyColumn",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has class table-b-table-default when prop stickyColumn",
          "status": "passed",
          "title": "has class table-b-table-default when prop stickyColumn",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th does not have class table-b-table-default when prop stickyColumn but also props variant",
          "status": "passed",
          "title": "does not have class table-b-table-default when prop stickyColumn but also props variant",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has attr scope to be colspan when prop colspan",
          "status": "passed",
          "title": "has attr scope to be colspan when prop colspan",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has attr scope to be rowspan when prop rowspan",
          "status": "passed",
          "title": "has attr scope to be rowspan when prop rowspan",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has attr scope to be col by default",
          "status": "passed",
          "title": "has attr scope to be col by default",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has scope colspan when both rowspan and colspan",
          "status": "passed",
          "title": "has scope colspan when both rowspan and colspan",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th does not have a nested div by default when stackedHeading is undefined",
          "status": "passed",
          "title": "does not have a nested div by default when stackedHeading is undefined",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th has a nested div when stackedHeading is defined",
          "status": "passed",
          "title": "has a nested div when stackedHeading is defined",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "th"
          ],
          "fullName": " th nested div when stackedHeading is defined contains default slot",
          "status": "passed",
          "title": "nested div when stackedHeading is defined contains default slot",
          "duration": 14,
          "failureMessages": []
        }
      ],
      "startTime": 1693908188124,
      "endTime": 1693908188183,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/th.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "thead"
          ],
          "fullName": " thead renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "thead"
          ],
          "fullName": " thead renders class table-{type} when prop variant",
          "status": "passed",
          "title": "renders class table-{type} when prop variant",
          "duration": 6,
          "failureMessages": []
        }
      ],
      "startTime": 1693908195473,
      "endTime": 1693908195494,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/thead.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast contains static class b-toast",
          "status": "passed",
          "title": "contains static class b-toast",
          "duration": 18,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div with toast class exists",
          "status": "passed",
          "title": "child div with toast class exists",
          "duration": 20,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child element is tag div",
          "status": "passed",
          "title": "child element is tag div",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div has static class toast",
          "status": "passed",
          "title": "child div has static class toast",
          "duration": 27,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div has child whos class is toast-header",
          "status": "passed",
          "title": "child div has child whos class is toast-header",
          "duration": 20,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div whos child has toast-header has element strong",
          "status": "passed",
          "title": "child div whos child has toast-header has element strong",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child divs child header child strong renders text of prop title",
          "status": "passed",
          "title": "child divs child header child strong renders text of prop title",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child divs child header child strong has static class me-auto",
          "status": "passed",
          "title": "child divs child header child strong has static class me-auto",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div whos child has toast-header has element button",
          "status": "passed",
          "title": "child div whos child has toast-header has element button",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child divs child header child button has static class btn-close",
          "status": "passed",
          "title": "child divs child header child button has static class btn-close",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div has element with class toast-body",
          "status": "passed",
          "title": "child div has element with class toast-body",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div child whos class is toast-body is tag div",
          "status": "passed",
          "title": "child div child whos class is toast-body is tag div",
          "duration": 20,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div child whos class is toast-body has classes length of 1",
          "status": "passed",
          "title": "child div child whos class is toast-body has classes length of 1",
          "duration": 25,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast child div child whos class is toast-body div renders text of prop body",
          "status": "passed",
          "title": "child div child whos class is toast-body div renders text of prop body",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast emits destroyed when component is unmounted",
          "status": "passed",
          "title": "emits destroyed when component is unmounted",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toast"
          ],
          "fullName": " toast destroyed emit gives value prop id",
          "status": "passed",
          "title": "destroyed emit gives value prop id",
          "duration": 3,
          "failureMessages": []
        }
      ],
      "startTime": 1693908178188,
      "endTime": 1693908178453,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/toast.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "toaster"
          ],
          "fullName": " toaster has static class b-toaster",
          "status": "passed",
          "title": "has static class b-toaster",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toaster"
          ],
          "fullName": " toaster has static class position-fixed",
          "status": "passed",
          "title": "has static class position-fixed",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toaster"
          ],
          "fullName": " toaster has static class p-3",
          "status": "passed",
          "title": "has static class p-3",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toaster"
          ],
          "fullName": " toaster has static style z-index: 11",
          "status": "passed",
          "title": "has static style z-index: 11",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toaster"
          ],
          "fullName": " toaster tag is div",
          "status": "passed",
          "title": "tag is div",
          "duration": 2,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toaster"
          ],
          "fullName": " toaster has position class",
          "status": "passed",
          "title": "has position class",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "toaster"
          ],
          "fullName": " toaster contains child b-toast when prop instance has an acceptable instance",
          "status": "passed",
          "title": "contains child b-toast when prop instance has an acceptable instance",
          "duration": 16,
          "failureMessages": []
        }
      ],
      "startTime": 1693908191170,
      "endTime": 1693908191221,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/toaster.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "tr"
          ],
          "fullName": " tr renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "tr"
          ],
          "fullName": " tr renders class table-{type} when prop variant",
          "status": "passed",
          "title": "renders class table-{type} when prop variant",
          "duration": 7,
          "failureMessages": []
        }
      ],
      "startTime": 1693908197776,
      "endTime": 1693908197797,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/tr.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "transition"
          ],
          "fullName": " transition renders default slot",
          "status": "passed",
          "title": "renders default slot",
          "duration": 23,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "transition"
          ],
          "fullName": " transition renders nothing when no slot",
          "status": "passed",
          "title": "renders nothing when no slot",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "transition"
          ],
          "fullName": " transition is component transition",
          "status": "passed",
          "title": "is component transition",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "transition"
          ],
          "fullName": " transition Transition has prop css true when prop transProps",
          "status": "passed",
          "title": "Transition has prop css true when prop transProps",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "transition"
          ],
          "fullName": " transition Transition has mode undefined by default when prop transProps",
          "status": "passed",
          "title": "Transition has mode undefined by default when prop transProps",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "transition"
          ],
          "fullName": " transition Transition has mode to be prop mode when prop transProps",
          "status": "passed",
          "title": "Transition has mode to be prop mode when prop transProps",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "transition"
          ],
          "fullName": " transition Transition has props from transProps",
          "status": "passed",
          "title": "Transition has props from transProps",
          "duration": 4,
          "failureMessages": []
        }
      ],
      "startTime": 1693908190156,
      "endTime": 1693908190207,
      "status": "passed",
      "message": "",
      "name": "C:/Users/br4x/flutter/nuxt-starter/tests/unit/components/transition.spec.ts"
    }
  ]
}